[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_abs     [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
nfp_new_pivots        [   -3.8384455167e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
nfp_new_fvalues#0    [    9.0000007370e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
nfp_new_point_abs     [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
nfp_new_pivots        [   -8.1251710109e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
nfp_new_fvalues#0    [    1.0399908552e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(5)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
nfp_new_point_abs     [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
nfp_new_pivots        [   -9.9544130576e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
nfp_new_fvalues#0    [    9.0399999418e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(6)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
nfp_new_point_abs     [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
nfp_new_pivots        [   -7.8686378614e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
nfp_new_fvalues#0    [    2.5039979997e+01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
nfp_new_point_abs     [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
nfp_new_pivots        [   -7.9999991181e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
tr_center_pt   [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
nfp_new_fvalues#0    [    9.9999881239e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(8)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted_#8:             [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
points_abs_#8:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
fvalues_#8:                    [    9.9999881239e-01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
tr_center_pt   [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
nfp_new_point_abs     [    8.7141142888e-01,    -1.9999996645e+00,     1.9999998349e+00 ] 
nfp_new_pivots        [   -1.5336248876e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
tr_center_pt   [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    8.7141142888e-01,    -1.9999996645e+00,     1.9999998349e+00 ] 
nfp_new_fvalues#0    [    7.6142193999e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted_#8:             [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
points_abs_#8:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
fvalues_#8:                    [    9.9999881239e-01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted_#8:             [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_shifted_#9:             [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
points_abs_#8:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#9:                 [    8.7141142888e-01,    -1.9999996645e+00,     1.9999998349e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
fvalues_#8:                    [    9.9999881239e-01 ] 
fvalues_#9:                    [    7.6142193999e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_shifted [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
tr_center_pt   [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -8.5726042123e-01,    -3.6710039703e-07,    -3.9999993933e+00 ] 
nfp_new_point_abs     [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
nfp_new_pivots        [   -1.6826362766e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_shifted [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
tr_center_pt   [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
nfp_new_fvalues#0    [    4.8204225972e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted_#8:             [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_shifted_#9:             [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -8.5726042123e-01,    -3.6710039703e-07,    -3.9999993933e+00 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
points_abs_#8:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#9:                 [    8.7141142888e-01,    -1.9999996645e+00,     1.9999998349e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
fvalues_#8:                    [    9.9999881239e-01 ] 
fvalues_#9:                    [    7.6142193999e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -1.0000000000e+00,    -7.1054273576e-15,    -7.1054273576e-15 ] 
points_shifted_#4:             [   -1.0000000614e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [   -2.9999996000e+00,    -1.9999962356e+00,     1.9999962356e+00 ] 
points_shifted_#6:             [   -2.9999999870e+00,     1.9999999644e+00,    -1.9999996725e+00 ] 
points_shifted_#7:             [    9.9999949165e-01,     1.9999989482e+00,     1.9999990162e+00 ] 
points_shifted_#8:             [   -1.0000002560e+00,    -1.9999999183e+00,    -1.9999996383e+00 ] 
points_shifted_#9:             [   -1.1285885711e+00,    -3.9999996645e+00,    -1.6509703164e-07 ] 
points_shifted_#10:             [   -8.5726042123e-01,    -3.6710039703e-07,    -3.9999993933e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -8.5726042123e-01,    -3.6710039703e-07,    -3.9999993933e+00 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    2.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [    2.3147236864e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [    1.0000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    9.9999993858e-01,     4.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [   -9.9999960000e-01,     3.7643888531e-06,     3.9999962356e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    2.9999994917e+00,     3.9999989482e+00,     3.9999990162e+00 ] 
points_abs_#8:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#9:                 [    8.7141142888e-01,    -1.9999996645e+00,     1.9999998349e+00 ] 
points_abs_#10:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    4.0100000000e+00 ] 
fvalues_#2:                    [    8.7324970855e+00 ] 
fvalues_#3:                    [    1.0000000000e+00 ] 
fvalues_#4:                    [    9.0000007370e+00 ] 
fvalues_#5:                    [    1.0399908552e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    2.5039979997e+01 ] 
fvalues_#8:                    [    9.9999881239e-01 ] 
fvalues_#9:                    [    7.6142193999e+00 ] 
fvalues_#10:                    [    4.8204225972e-01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
tr_center_pt   [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
nfp_new_point_abs     [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
nfp_new_pivots        [   -3.2111731646e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
tr_center_pt   [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
nfp_new_fvalues#0    [    2.8481959989e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted_#3:             [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted_#4:             [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted_#5:             [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted_#6:             [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted_#7:             [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted_#8:             [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#2:                 [    1.2777228299e+00,     2.4999995891e+00,    -1.4999994858e+00 ] 
points_abs_#3:                 [    1.4273960405e-01,     9.9999975449e-01,    -2.9999993181e+00 ] 
points_abs_#4:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#5:                 [    1.3591536178e+00,     7.2338566295e-01,    -3.9999988810e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#8:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    4.8204225972e-01 ] 
fvalues_#2:                    [    7.5319562436e-01 ] 
fvalues_#3:                    [    9.6701440782e-01 ] 
fvalues_#4:                    [    9.9999881239e-01 ] 
fvalues_#5:                    [    1.2644701060e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    3.5573011376e-03 ] 
fvalues_#8:                    [    1.2132482371e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted_#3:             [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted_#4:             [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted_#5:             [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted_#6:             [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted_#7:             [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted_#8:             [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
points_shifted_#9:             [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#2:                 [    1.2777228299e+00,     2.4999995891e+00,    -1.4999994858e+00 ] 
points_abs_#3:                 [    1.4273960405e-01,     9.9999975449e-01,    -2.9999993181e+00 ] 
points_abs_#4:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#5:                 [    1.3591536178e+00,     7.2338566295e-01,    -3.9999988810e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#8:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
points_abs_#9:                 [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.8204225972e-01 ] 
fvalues_#2:                    [    7.5319562436e-01 ] 
fvalues_#3:                    [    9.6701440782e-01 ] 
fvalues_#4:                    [    9.9999881239e-01 ] 
fvalues_#5:                    [    1.2644701060e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    3.5573011376e-03 ] 
fvalues_#8:                    [    1.2132482371e+00 ] 
fvalues_#9:                    [    2.8481959989e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
points_shifted [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
tr_center_pt   [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    7.4999940222e-01,    -1.6471366729e-01,     2.4999953994e-01 ] 
nfp_new_point_abs     [    1.8927389810e+00,     1.8352859656e+00,    -1.7499998534e+00 ] 
nfp_new_pivots        [   -6.3661646335e-01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
points_shifted [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
tr_center_pt   [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.8927389810e+00,     1.8352859656e+00,    -1.7499998534e+00 ] 
nfp_new_fvalues#0    [    3.0605899061e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted_#3:             [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted_#4:             [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted_#5:             [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted_#6:             [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted_#7:             [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted_#8:             [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
points_shifted_#9:             [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    7.4999940222e-01,    -1.6471366729e-01,     2.4999953994e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#2:                 [    1.2777228299e+00,     2.4999995891e+00,    -1.4999994858e+00 ] 
points_abs_#3:                 [    1.4273960405e-01,     9.9999975449e-01,    -2.9999993181e+00 ] 
points_abs_#4:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#5:                 [    1.3591536178e+00,     7.2338566295e-01,    -3.9999988810e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#8:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
points_abs_#9:                 [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.8204225972e-01 ] 
fvalues_#2:                    [    7.5319562436e-01 ] 
fvalues_#3:                    [    9.6701440782e-01 ] 
fvalues_#4:                    [    9.9999881239e-01 ] 
fvalues_#5:                    [    1.2644701060e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    3.5573011376e-03 ] 
fvalues_#8:                    [    1.2132482371e+00 ] 
fvalues_#9:                    [    2.8481959989e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.3498325113e-01,     4.9999995616e-01,     4.9999990757e-01 ] 
points_shifted_#3:             [   -9.9999997472e-01,    -9.9999987841e-01,    -9.9999992478e-01 ] 
points_shifted_#4:             [   -1.4273983481e-01,    -1.9999995512e+00,     1.9999997550e+00 ] 
points_shifted_#5:             [    2.1641403902e-01,    -1.2766139699e+00,    -1.9999994876e+00 ] 
points_shifted_#6:             [   -2.1427395658e+00,     2.0000003315e+00,     1.9999997208e+00 ] 
points_shifted_#7:             [    2.4999991781e-01,    -1.5389157715e-02,    -2.4999988454e-01 ] 
points_shifted_#8:             [    7.4999969163e-01,     4.8461059103e-01,    -7.4999951125e-01 ] 
points_shifted_#9:             [   -2.4999978680e-01,     4.8461053603e-01,    -7.4999959483e-01 ] 
points_shifted_#10:             [    7.4999940222e-01,    -1.6471366729e-01,     2.4999953994e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    7.4999940222e-01,    -1.6471366729e-01,     2.4999953994e-01 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#2:                 [    1.2777228299e+00,     2.4999995891e+00,    -1.4999994858e+00 ] 
points_abs_#3:                 [    1.4273960405e-01,     9.9999975449e-01,    -2.9999993181e+00 ] 
points_abs_#4:                 [    9.9999974396e-01,     8.1732438595e-08,     3.6167461492e-07 ] 
points_abs_#5:                 [    1.3591536178e+00,     7.2338566295e-01,    -3.9999988810e+00 ] 
points_abs_#6:                 [   -9.9999998699e-01,     3.9999999644e+00,     3.2746318279e-07 ] 
points_abs_#7:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#8:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
points_abs_#9:                 [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
points_abs_#10:                 [    1.8927389810e+00,     1.8352859656e+00,    -1.7499998534e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    4.8204225972e-01 ] 
fvalues_#2:                    [    7.5319562436e-01 ] 
fvalues_#3:                    [    9.6701440782e-01 ] 
fvalues_#4:                    [    9.9999881239e-01 ] 
fvalues_#5:                    [    1.2644701060e+00 ] 
fvalues_#6:                    [    9.0399999418e+00 ] 
fvalues_#7:                    [    3.5573011376e-03 ] 
fvalues_#8:                    [    1.2132482371e+00 ] 
fvalues_#9:                    [    2.8481959989e+00 ] 
fvalues_#10:                    [    3.0605899061e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [    4.9999974722e-01,    -4.9999970972e-01,     4.9999947606e-01 ] 
points_shifted [   -4.9999970461e-01,     4.9999969375e-01,    -4.9999971029e-01 ] 
points_shifted [    4.9999948441e-01,    -1.4932450958e-01,     4.9999942448e-01 ] 
points_shifted [   -3.9135885332e-02,    -4.9999979930e-01,    -2.3925396956e-02 ] 
points_shifted [    4.9999977382e-01,     4.9999974875e-01,    -4.9999962671e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
nfp_new_point_abs     [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
nfp_new_pivots        [   -1.0918808868e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [    4.9999974722e-01,    -4.9999970972e-01,     4.9999947606e-01 ] 
points_shifted [   -4.9999970461e-01,     4.9999969375e-01,    -4.9999971029e-01 ] 
points_shifted [    4.9999948441e-01,    -1.4932450958e-01,     4.9999942448e-01 ] 
points_shifted [   -3.9135885332e-02,    -4.9999979930e-01,    -2.3925396956e-02 ] 
points_shifted [    4.9999977382e-01,     4.9999974875e-01,    -4.9999962671e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
nfp_new_fvalues#0    [    4.0336010025e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#3:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#4:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#5:             [    4.9999974722e-01,    -4.9999970972e-01,     4.9999947606e-01 ] 
points_shifted_#6:             [   -4.9999970461e-01,     4.9999969375e-01,    -4.9999971029e-01 ] 
points_shifted_#7:             [    4.9999948441e-01,    -1.4932450958e-01,     4.9999942448e-01 ] 
points_shifted_#8:             [   -3.9135885332e-02,    -4.9999979930e-01,    -2.3925396956e-02 ] 
points_shifted_#9:             [    4.9999977382e-01,     4.9999974875e-01,    -4.9999962671e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#3:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#4:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#5:                 [    1.8927392438e+00,     1.4846107655e+00,    -1.7499998018e+00 ] 
points_abs_#6:                 [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
points_abs_#7:                 [    1.8927389810e+00,     1.8352859656e+00,    -1.7499998534e+00 ] 
points_abs_#8:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#9:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4670711881e-02 ] 
fvalues_#3:                    [    4.8204225972e-01 ] 
fvalues_#4:                    [    1.0110903615e-02 ] 
fvalues_#5:                    [    4.4089489856e+00 ] 
fvalues_#6:                    [    2.8481959989e+00 ] 
fvalues_#7:                    [    3.0605899061e+00 ] 
fvalues_#8:                    [    1.2209840464e-01 ] 
fvalues_#9:                    [    1.2132482371e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#3:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#4:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#5:             [    4.9999974722e-01,    -4.9999970972e-01,     4.9999947606e-01 ] 
points_shifted_#6:             [   -4.9999970461e-01,     4.9999969375e-01,    -4.9999971029e-01 ] 
points_shifted_#7:             [    4.9999948441e-01,    -1.4932450958e-01,     4.9999942448e-01 ] 
points_shifted_#8:             [   -3.9135885332e-02,    -4.9999979930e-01,    -2.3925396956e-02 ] 
points_shifted_#9:             [    4.9999977382e-01,     4.9999974875e-01,    -4.9999962671e-01 ] 
points_shifted_#10:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#3:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#4:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#5:                 [    1.8927392438e+00,     1.4846107655e+00,    -1.7499998018e+00 ] 
points_abs_#6:                 [    8.9273979197e-01,     2.4846101689e+00,    -2.7499989882e+00 ] 
points_abs_#7:                 [    1.8927389810e+00,     1.8352859656e+00,    -1.7499998534e+00 ] 
points_abs_#8:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#9:                 [    1.8927392704e+00,     2.4846102239e+00,    -2.7499989046e+00 ] 
points_abs_#10:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4670711881e-02 ] 
fvalues_#3:                    [    4.8204225972e-01 ] 
fvalues_#4:                    [    1.0110903615e-02 ] 
fvalues_#5:                    [    4.4089489856e+00 ] 
fvalues_#6:                    [    2.8481959989e+00 ] 
fvalues_#7:                    [    3.0605899061e+00 ] 
fvalues_#8:                    [    1.2209840464e-01 ] 
fvalues_#9:                    [    1.2132482371e+00 ] 
fvalues_#10:                    [    4.0336010025e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
nfp_new_point_abs     [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
nfp_new_pivots        [   -2.6083199502e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
nfp_new_fvalues#0    [    2.7617518015e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#7:             [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#7:                 [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
fvalues_#7:                    [    2.7617518015e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
tr_center_pt   [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
nfp_new_point_abs     [    1.4761000670e+00,     2.0783495546e+00,    -2.2812485535e+00 ] 
nfp_new_pivots        [   -6.9514107747e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
tr_center_pt   [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.4761000670e+00,     2.0783495546e+00,    -2.2812485535e+00 ] 
nfp_new_fvalues#0    [    1.2371355723e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#7:             [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted_#8:             [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#7:                 [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
points_abs_#8:                 [    1.4136012775e+00,     2.0158512824e+00,    -2.2187498308e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
fvalues_#7:                    [    2.7617518015e-02 ] 
fvalues_#8:                    [    2.0198118831e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#7:             [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted_#8:             [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
points_shifted_#9:             [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#7:                 [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
points_abs_#8:                 [    1.4136012775e+00,     2.0158512824e+00,    -2.2187498308e+00 ] 
points_abs_#9:                 [    1.4761000670e+00,     2.0783495546e+00,    -2.2812485535e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
fvalues_#7:                    [    2.7617518015e-02 ] 
fvalues_#8:                    [    2.0198118831e-03 ] 
fvalues_#9:                    [    1.2371355723e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
points_shifted [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
tr_center_pt   [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    8.3359958222e-02,    -3.1258010591e-02,     9.3748289626e-02 ] 
nfp_new_point_abs     [    1.4760994548e+00,     1.9533524646e+00,    -2.1562509883e+00 ] 
nfp_new_pivots        [   -2.1677819298e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
points_shifted [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
tr_center_pt   [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.4760994548e+00,     1.9533524646e+00,    -2.1562509883e+00 ] 
nfp_new_fvalues#0    [    5.3124685488e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#7:             [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted_#8:             [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
points_shifted_#9:             [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    8.3359958222e-02,    -3.1258010591e-02,     9.3748289626e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#7:                 [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
points_abs_#8:                 [    1.4136012775e+00,     2.0158512824e+00,    -2.2187498308e+00 ] 
points_abs_#9:                 [    1.4761000670e+00,     2.0783495546e+00,    -2.2812485535e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
fvalues_#7:                    [    2.7617518015e-02 ] 
fvalues_#8:                    [    2.0198118831e-03 ] 
fvalues_#9:                    [    1.2371355723e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -6.2499959479e-02,    -6.2499886944e-02,    -6.2499847910e-02 ] 
points_shifted_#3:             [    6.2499906480e-02,    -6.2499544235e-02,    -4.1993042561e-02 ] 
points_shifted_#4:             [    2.5362698800e-02,    -1.2499880976e-01,    -1.2499964569e-01 ] 
points_shifted_#5:             [    7.1992850278e-02,     2.4999954946e-01,     3.1896348194e-02 ] 
points_shifted_#6:             [   -2.4999991781e-01,     1.5389157715e-02,     2.4999988454e-01 ] 
points_shifted_#7:             [   -3.1249755615e-02,     3.1249787954e-02,    -3.1249697920e-02 ] 
points_shifted_#8:             [    2.0861780913e-02,     3.1240807264e-02,     3.1249447127e-02 ] 
points_shifted_#9:             [    8.3360570452e-02,     9.3739079451e-02,    -3.1249275605e-02 ] 
points_shifted_#10:             [    8.3359958222e-02,    -3.1258010591e-02,     9.3748289626e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    8.3359958222e-02,    -3.1258010591e-02,     9.3748289626e-02 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    1.3927394966e+00,     1.9846104752e+00,    -2.2499992779e+00 ] 
points_abs_#2:                 [    1.3302395371e+00,     1.9221105882e+00,    -2.3124991258e+00 ] 
points_abs_#3:                 [    1.4552394031e+00,     1.9221109309e+00,    -2.2919923204e+00 ] 
points_abs_#4:                 [    1.4181021954e+00,     1.8596116654e+00,    -2.3749989236e+00 ] 
points_abs_#5:                 [    1.4647323469e+00,     2.2346100246e+00,    -2.2181029297e+00 ] 
points_abs_#6:                 [    1.1427395788e+00,     1.9999996329e+00,    -1.9999993933e+00 ] 
points_abs_#7:                 [    1.3614897410e+00,     2.0158602631e+00,    -2.2812489758e+00 ] 
points_abs_#8:                 [    1.4136012775e+00,     2.0158512824e+00,    -2.2187498308e+00 ] 
points_abs_#9:                 [    1.4761000670e+00,     2.0783495546e+00,    -2.2812485535e+00 ] 
points_abs_#10:                 [    1.4760994548e+00,     1.9533524646e+00,    -2.1562509883e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    3.5573011376e-03 ] 
fvalues_#2:                    [    2.4369212360e-02 ] 
fvalues_#3:                    [    4.0336010025e-02 ] 
fvalues_#4:                    [    2.4670711881e-02 ] 
fvalues_#5:                    [    1.0110903615e-02 ] 
fvalues_#6:                    [    4.8204225972e-01 ] 
fvalues_#7:                    [    2.7617518015e-02 ] 
fvalues_#8:                    [    2.0198118831e-03 ] 
fvalues_#9:                    [    1.2371355723e-02 ] 
fvalues_#10:                    [    5.3124685488e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
nfp_new_point_abs     [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
nfp_new_pivots        [   -1.8248516439e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
nfp_new_fvalues#0    [    1.0811237251e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
nfp_new_point_abs     [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
nfp_new_pivots        [   -5.3885188772e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
nfp_new_fvalues#0    [    2.7156336550e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(8)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted_#8:             [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
points_abs_#8:                 [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
fvalues_#8:                    [    2.7156336550e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
nfp_new_point_abs     [    1.2436665961e+00,     1.4394632392e+00,    -2.1436951594e+00 ] 
nfp_new_pivots        [   -2.2408182492e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.2436665961e+00,     1.4394632392e+00,    -2.1436951594e+00 ] 
nfp_new_fvalues#0    [    1.2094873035e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted_#8:             [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
points_abs_#8:                 [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
fvalues_#8:                    [    2.7156336550e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted_#8:             [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_shifted_#9:             [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
points_abs_#8:                 [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
points_abs_#9:                 [    1.2436665961e+00,     1.4394632392e+00,    -2.1436951594e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
fvalues_#8:                    [    2.7156336550e-03 ] 
fvalues_#9:                    [    1.2094873035e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_shifted [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -9.0687929355e-03,     3.0595646975e-02,     9.1759038269e-02 ] 
nfp_new_point_abs     [    1.1824904775e+00,     1.4394761752e+00,    -2.1437018685e+00 ] 
nfp_new_pivots        [   -2.0696444131e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_shifted [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
tr_center_pt   [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.1824904775e+00,     1.4394761752e+00,    -2.1437018685e+00 ] 
nfp_new_fvalues#0    [    2.0298453375e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted_#8:             [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_shifted_#9:             [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.0687929355e-03,     3.0595646975e-02,     9.1759038269e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
points_abs_#8:                 [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
points_abs_#9:                 [    1.2436665961e+00,     1.4394632392e+00,    -2.1436951594e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
fvalues_#8:                    [    2.7156336550e-03 ] 
fvalues_#9:                    [    1.2094873035e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.1517663431e-02,     6.1172374514e-02,     6.1176255207e-02 ] 
points_shifted_#3:             [    4.8824670010e-02,     1.2235774770e-01,    -1.2235860787e-01 ] 
points_shifted_#4:             [    1.6204434083e-01,     7.5730147679e-02,    -3.8463768084e-02 ] 
points_shifted_#5:             [    1.3996189304e-01,     3.6707530201e-01,    -1.4964610916e-01 ] 
points_shifted_#6:             [   -9.3150744635e-03,    -1.2235715498e-01,    -3.4234748983e-01 ] 
points_shifted_#7:             [   -9.0714074241e-03,     9.1760190262e-02,     3.0593173165e-02 ] 
points_shifted_#8:             [    5.2107274111e-02,     9.1761862100e-02,     9.1765462928e-02 ] 
points_shifted_#9:             [    5.2107325709e-02,     3.0582711004e-02,     9.1765747400e-02 ] 
points_shifted_#10:             [   -9.0687929355e-03,     3.0595646975e-02,     9.1759038269e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.0687929355e-03,     3.0595646975e-02,     9.1759038269e-02 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    1.1915592704e+00,     1.4088805282e+00,    -2.2354609068e+00 ] 
points_abs_#2:                 [    1.2130769339e+00,     1.4700529027e+00,    -2.1742846515e+00 ] 
points_abs_#3:                 [    1.2403839404e+00,     1.5312382759e+00,    -2.3578195146e+00 ] 
points_abs_#4:                 [    1.3536036113e+00,     1.4846106759e+00,    -2.2739246748e+00 ] 
points_abs_#5:                 [    1.3315211635e+00,     1.7759558302e+00,    -2.3851070159e+00 ] 
points_abs_#6:                 [    1.1822441960e+00,     1.2865233732e+00,    -2.5778083966e+00 ] 
points_abs_#7:                 [    1.1824878630e+00,     1.5006407185e+00,    -2.2048677336e+00 ] 
points_abs_#8:                 [    1.2436665445e+00,     1.5006423903e+00,    -2.1436954438e+00 ] 
points_abs_#9:                 [    1.2436665961e+00,     1.4394632392e+00,    -2.1436951594e+00 ] 
points_abs_#10:                 [    1.1824904775e+00,     1.4394761752e+00,    -2.1437018685e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    4.8647930223e-04 ] 
fvalues_#2:                    [    4.5627603911e-04 ] 
fvalues_#3:                    [    6.3133962452e-04 ] 
fvalues_#4:                    [    1.2209840464e-01 ] 
fvalues_#5:                    [    1.1081061992e-03 ] 
fvalues_#6:                    [    1.2692669516e-02 ] 
fvalues_#7:                    [    1.0811237251e-02 ] 
fvalues_#8:                    [    2.7156336550e-03 ] 
fvalues_#9:                    [    1.2094873035e-02 ] 
fvalues_#10:                    [    2.0298453375e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.1999844675e+00,     1.4395337193e+00,    -2.1437390884e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -7.6273074148e-03,    -7.6356693346e-03,     7.6354735553e-03 ] 
points_shifted [   -6.2165460844e-03,    -6.4048771141e-05,     3.7543069155e-05 ] 
points_shifted [    1.5267262770e-02,    -1.5270329063e-02,    -1.5267871182e-02 ] 
points_shifted [    2.1500441384e-02,    -7.0461768678e-05,     4.4093749926e-05 ] 
points_shifted [    1.3092466354e-02,     3.0519183423e-02,    -3.0545563197e-02 ] 
points_shifted [   -7.0436470200e-04,     5.8904590364e-03,    -3.0505318012e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.1999844675e+00,     1.4395337193e+00,    -2.1437390884e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.3960643878e-04,     3.7995579142e-03,     3.8095925297e-03 ] 
points_shifted [   -7.6273074148e-03,    -7.6356693346e-03,     7.6354735553e-03 ] 
points_shifted [   -6.2165460844e-03,    -6.4048771141e-05,     3.7543069155e-05 ] 
points_shifted [    1.5267262770e-02,    -1.5270329063e-02,    -1.5267871182e-02 ] 
points_shifted [   -1.7496713331e-02,    -7.0339972698e-05,     4.3993842244e-05 ] 
points_shifted [    2.1500441384e-02,    -7.0461768678e-05,     4.4093749926e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.1999844675e+00,     1.4395337193e+00,    -2.1437390884e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.8046631540e-03,     1.9065522821e-03,    -1.9063192822e-03 ] 
points_shifted [   -2.3960643878e-04,     3.7995579142e-03,     3.8095925297e-03 ] 
points_shifted [   -6.2165460844e-03,    -6.4048771141e-05,     3.7543069155e-05 ] 
points_shifted [   -7.6273074148e-03,    -7.6356693346e-03,     7.6354735553e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.1999844675e+00,     1.4395337193e+00,    -2.1437390884e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.7727442334e-04,    -4.7727437902e-04,    -4.7727442262e-04 ] 
points_shifted [   -1.4318230070e-03,    -1.4318231946e-03,     4.7727432927e-04 ] 
points_shifted [   -2.3960643878e-04,     3.7995579142e-03,     3.8095925297e-03 ] 
tr_center_pt   [   -1.4318230070e-03,    -1.4318231946e-03,     4.7727432927e-04 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.1985526445e+00,     1.4381018961e+00,    -2.1432618140e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -1.9082589193e-03,    -1.9090876757e-03,    -1.9090944388e-03 ] 
points_shifted [    1.4318230070e-03,     1.4318231946e-03,    -4.7727432927e-04 ] 
points_shifted [    9.5454858362e-04,     9.5454881556e-04,    -9.5454875189e-04 ] 
points_shifted [   -8.4982231571e-04,    -3.9234903917e-03,    -4.6531000005e-03 ] 
points_shifted [   -4.7847230775e-03,     1.3677744234e-03,    -4.3973126011e-04 ] 
points_shifted [   -5.7586040607e-04,    -2.6104153337e-03,    -1.2136333411e-03 ] 
points_shifted [    1.1922165682e-03,     5.2313811088e-03,     3.3323182004e-03 ] 
points_shifted [   -6.1954844078e-03,    -6.2038461401e-03,     7.1581992260e-03 ] 
tr_center_pt   [   -8.4982231571e-04,    -3.9234903917e-03,    -4.6531000005e-03 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
nfp_new_point_abs     [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
nfp_new_pivots        [   -5.8690725342e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
nfp_new_fvalues#0    [    4.0726820217e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
nfp_new_point_abs     [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
nfp_new_pivots        [   -8.8946291165e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
nfp_new_fvalues#0    [    7.2671723073e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(8)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted_#8:             [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
points_abs_#8:                 [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
fvalues_#8:                    [    7.2671723073e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
nfp_new_point_abs     [    1.0521155726e+00,     1.0705898316e+00,    -2.0281083005e+00 ] 
nfp_new_pivots        [   -6.2618657065e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0521155726e+00,     1.0705898316e+00,    -2.0281083005e+00 ] 
nfp_new_fvalues#0    [    1.3490169715e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted_#8:             [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
points_abs_#8:                 [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
fvalues_#8:                    [    7.2671723073e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted_#8:             [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_shifted_#9:             [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
points_abs_#8:                 [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
points_abs_#9:                 [    1.0521155726e+00,     1.0705898316e+00,    -2.0281083005e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
fvalues_#8:                    [    7.2671723073e-03 ] 
fvalues_#9:                    [    1.3490169715e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_shifted [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.4062523142e-02,    -2.4352912624e-02,    -2.4360449074e-02 ] 
nfp_new_point_abs     [    1.0036880701e+00,     1.0218764591e+00,    -2.0281065238e+00 ] 
nfp_new_pivots        [   -1.5787132010e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_shifted [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0036880701e+00,     1.0218764591e+00,    -2.0281065238e+00 ] 
nfp_new_fvalues#0    [    2.1000098775e-04 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted_#8:             [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_shifted_#9:             [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4062523142e-02,    -2.4352912624e-02,    -2.4360449074e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
points_abs_#8:                 [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
points_abs_#9:                 [    1.0521155726e+00,     1.0705898316e+00,    -2.0281083005e+00 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
fvalues_#8:                    [    7.2671723073e-03 ] 
fvalues_#9:                    [    1.3490169715e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -4.8724846967e-02,    -1.0082336839e-02,     4.8725490386e-02 ] 
points_shifted_#3:             [   -1.8777007471e-02,     9.7465767026e-02,     9.7467089258e-02 ] 
points_shifted_#4:             [   -1.2274222474e-01,    -9.5154132020e-02,     2.3945942302e-03 ] 
points_shifted_#5:             [    8.9079457376e-02,     1.9493456490e-01,    -2.5168933956e-02 ] 
points_shifted_#6:             [    2.8401794927e-01,    -3.9271753547e-06,     1.6976955778e-01 ] 
points_shifted_#7:             [   -2.4366648226e-02,     2.4366640546e-02,    -2.4366638508e-02 ] 
points_shifted_#8:             [    2.4366740319e-02,    -2.4366737238e-02,    -2.4366687563e-02 ] 
points_shifted_#9:             [    2.4364979311e-02,     2.4360459865e-02,    -2.4362225788e-02 ] 
points_shifted_#10:             [   -2.4062523142e-02,    -2.4352912624e-02,    -2.4360449074e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.4062523142e-02,    -2.4352912624e-02,    -2.4360449074e-02 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    1.0277505933e+00,     1.0462293717e+00,    -2.0037460747e+00 ] 
points_abs_#2:                 [    9.7902574630e-01,     1.0361470349e+00,    -1.9550205843e+00 ] 
points_abs_#3:                 [    1.0089735858e+00,     1.1436951387e+00,    -1.9062789855e+00 ] 
points_abs_#4:                 [    9.0500836853e-01,     9.5107523970e-01,    -2.0013514805e+00 ] 
points_abs_#5:                 [    1.1168300506e+00,     1.2411639366e+00,    -2.0289150087e+00 ] 
points_abs_#6:                 [    1.3117685425e+00,     1.0462254445e+00,    -1.8339765169e+00 ] 
points_abs_#7:                 [    1.0033839450e+00,     1.0705960123e+00,    -2.0281127132e+00 ] 
points_abs_#8:                 [    1.0521173336e+00,     1.0218626345e+00,    -2.0281127623e+00 ] 
points_abs_#9:                 [    1.0521155726e+00,     1.0705898316e+00,    -2.0281083005e+00 ] 
points_abs_#10:                 [    1.0036880701e+00,     1.0218764591e+00,    -2.0281065238e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    1.0854091547e-04 ] 
fvalues_#2:                    [    6.0347949716e-03 ] 
fvalues_#3:                    [    1.5793111210e-02 ] 
fvalues_#4:                    [    1.7523499777e-02 ] 
fvalues_#5:                    [    1.7425886064e-04 ] 
fvalues_#6:                    [    4.5593744237e-01 ] 
fvalues_#7:                    [    4.0726820217e-03 ] 
fvalues_#8:                    [    7.2671723073e-03 ] 
fvalues_#9:                    [    1.3490169715e-03 ] 
fvalues_#10:                    [    2.1000098775e-04 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    7.6786857584e-04,     2.4902326845e-03,    -5.5299039638e-03 ] 
points_shifted [    5.0384075929e-03,    -3.5665055784e-03,    -1.2042837941e-02 ] 
points_shifted [    2.8174992130e-03,     6.5739681574e-03,     1.2111323236e-02 ] 
points_shifted [    1.2052247139e-02,     2.4017898845e-02,    -1.5383811954e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
points_shifted [    7.6786857584e-04,     2.4902326845e-03,    -5.5299039638e-03 ] 
points_shifted [    2.8174992130e-03,     6.5739681574e-03,     1.2111323236e-02 ] 
points_shifted [    5.0384075929e-03,    -3.5665055784e-03,    -1.2042837941e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.5027400609e-03,     1.4715113060e-03,     1.3288842042e-03 ] 
points_shifted [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
points_shifted [    7.6786857584e-04,     2.4902326845e-03,    -5.5299039638e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    7.5814554675e-04,    -7.5814510930e-04,    -7.5814582776e-04 ] 
points_shifted [    1.5027400609e-03,     1.4715113060e-03,     1.3288842042e-03 ] 
points_shifted [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.9824641000e-04,    -3.7602855543e-04,     3.7614042429e-04 ] 
nfp_new_point_abs     [    1.0248898415e+00,     1.0488336489e+00,    -2.0913643184e+00 ] 
nfp_new_pivots        [   -2.5300414074e-05 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    7.5814554675e-04,    -7.5814510930e-04,    -7.5814582776e-04 ] 
points_shifted [    1.5027400609e-03,     1.4715113060e-03,     1.3288842042e-03 ] 
points_shifted [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0248898415e+00,     1.0488336489e+00,    -2.0913643184e+00 ] 
nfp_new_fvalues#0    [    8.6459524873e-06 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(5)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    7.5814554675e-04,    -7.5814510930e-04,    -7.5814582776e-04 ] 
points_shifted_#3:             [    1.5027400609e-03,     1.4715113060e-03,     1.3288842042e-03 ] 
points_shifted_#4:             [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9824641000e-04,    -3.7602855543e-04,     3.7614042429e-04 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
points_abs_#2:                 [    1.0253497406e+00,     1.0484515323e+00,    -2.0924986046e+00 ] 
points_abs_#3:                 [    1.0260943352e+00,     1.0506811887e+00,    -2.0904115746e+00 ] 
points_abs_#4:                 [    1.0215725634e+00,     1.0522075451e+00,    -2.0890777124e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    6.3818493511e-06 ] 
fvalues_#2:                    [    1.4781421004e-05 ] 
fvalues_#3:                    [    1.1598220004e-05 ] 
fvalues_#4:                    [    7.8562899662e-05 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    7.5814554675e-04,    -7.5814510930e-04,    -7.5814582776e-04 ] 
points_shifted_#3:             [    1.5027400609e-03,     1.4715113060e-03,     1.3288842042e-03 ] 
points_shifted_#4:             [   -3.0190316673e-03,     2.9978677310e-03,     2.6627464251e-03 ] 
points_shifted_#5:             [    2.9824641000e-04,    -3.7602855543e-04,     3.7614042429e-04 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9824641000e-04,    -3.7602855543e-04,     3.7614042429e-04 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
points_abs_#2:                 [    1.0253497406e+00,     1.0484515323e+00,    -2.0924986046e+00 ] 
points_abs_#3:                 [    1.0260943352e+00,     1.0506811887e+00,    -2.0904115746e+00 ] 
points_abs_#4:                 [    1.0215725634e+00,     1.0522075451e+00,    -2.0890777124e+00 ] 
points_abs_#5:                 [    1.0248898415e+00,     1.0488336489e+00,    -2.0913643184e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    6.3818493511e-06 ] 
fvalues_#2:                    [    1.4781421004e-05 ] 
fvalues_#3:                    [    1.1598220004e-05 ] 
fvalues_#4:                    [    7.8562899662e-05 ] 
fvalues_#5:                    [    8.6459524873e-06 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [    6.3496304676e-04,    -6.7604087969e-04,     7.0959855138e-04 ] 
points_shifted [    7.1579126613e-04,    -6.7908695366e-04,     7.1253275648e-04 ] 
points_shifted [    1.0948621835e-03,    -1.0581574336e-03,    -4.2468770067e-04 ] 
points_shifted [    1.8394566977e-03,     1.1714989818e-03,     1.6623423313e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -6.3572273328e-04,     1.4234471375e-04,     6.5463538836e-04 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [    1.0948621835e-03,    -1.0581574336e-03,    -4.2468770067e-04 ] 
points_shifted [    7.1579126613e-04,    -6.7908695366e-04,     7.1253275648e-04 ] 
points_shifted [    6.3496304676e-04,    -6.7604087969e-04,     7.0959855138e-04 ] 
points_shifted [    1.8394566977e-03,     1.1714989818e-03,     1.6623423313e-03 ] 
points_shifted [   -2.6823150305e-03,     2.6978554067e-03,     2.9962045522e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [   -6.3572273328e-04,     1.4234471375e-04,     6.5463538836e-04 ] 
points_shifted [    6.3496304676e-04,    -6.7604087969e-04,     7.0959855138e-04 ] 
points_shifted [    7.1579126613e-04,    -6.7908695366e-04,     7.1253275648e-04 ] 
points_shifted [    1.0948621835e-03,    -1.0581574336e-03,    -4.2468770067e-04 ] 
points_shifted [    1.8394566977e-03,     1.1714989818e-03,     1.6623423313e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [   -6.3572273328e-04,     1.4234471375e-04,     6.5463538836e-04 ] 
points_shifted [    6.3496304676e-04,    -6.7604087969e-04,     7.0959855138e-04 ] 
points_shifted [    7.1579126613e-04,    -6.7908695366e-04,     7.1253275648e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [   -6.3572273328e-04,     1.4234471375e-04,     6.5463538836e-04 ] 
points_shifted [    6.3496304676e-04,    -6.7604087969e-04,     7.0959855138e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
tr_center_pt   [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.1044380117e-05,     2.1044796222e-05,     6.3134235627e-05 ] 
nfp_new_point_abs     [    1.0242759228e+00,     1.0495307345e+00,    -2.0920107827e+00 ] 
nfp_new_pivots        [   -4.2089660266e-05 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
tr_center_pt   [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    1.0242759228e+00,     1.0495307345e+00,    -2.0920107827e+00 ] 
nfp_new_fvalues#0    [    6.0449678540e-06 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 
points_shifted_#3:             [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.1044380117e-05,     2.1044796222e-05,     6.3134235627e-05 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
points_abs_#2:                 [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
points_abs_#3:                 [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    6.0524335843e-06 ] 
fvalues_#2:                    [    6.0384836493e-06 ] 
fvalues_#3:                    [    6.3818493511e-06 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 
points_shifted_#3:             [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted_#4:             [    2.1044380117e-05,     2.1044796222e-05,     6.3134235627e-05 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.1044380117e-05,     2.1044796222e-05,     6.3134235627e-05 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
points_abs_#2:                 [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
points_abs_#3:                 [    1.0245915951e+00,     1.0492096774e+00,    -2.0917404588e+00 ] 
points_abs_#4:                 [    1.0242759228e+00,     1.0495307345e+00,    -2.0920107827e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    6.0524335843e-06 ] 
fvalues_#2:                    [    6.0384836493e-06 ] 
fvalues_#3:                    [    6.3818493511e-06 ] 
fvalues_#4:                    [    6.0449678540e-06 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242548785e+00,     1.0495096897e+00,    -2.0920739169e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 
points_shifted [    3.3671663676e-04,    -3.0001232427e-04,     3.3345812708e-04 ] 
points_shifted [    2.1044380117e-05,     2.1044796222e-05,     6.3134235627e-05 ] 
tr_center_pt   [    4.2089164895e-05,     4.2089565319e-05,     4.2089553175e-05 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.1044784779e-05,    -2.1044769097e-05,     2.1044682452e-05 ] 
points_shifted [   -4.2089164895e-05,    -4.2089565319e-05,    -4.2089553175e-05 ] 
points_shifted [   -2.1044789793e-05,     2.1044789793e-05,     0.0000000000e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.1044789793e-05,     2.1044789793e-05,     0.0000000000e+00 ] 
points_shifted [   -2.1044784779e-05,    -2.1044769097e-05,     2.1044682452e-05 ] 
points_shifted [   -4.2089164895e-05,    -4.2089565319e-05,    -4.2089553175e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.1044789793e-05,     2.1044789793e-05,     0.0000000000e+00 ] 
points_shifted [   -2.1044784779e-05,    -2.1044769097e-05,     2.1044682452e-05 ] 
points_shifted [   -4.2089164895e-05,    -4.2089565319e-05,    -4.2089553175e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.1044789793e-05,     2.1044789793e-05,     0.0000000000e+00 ] 
points_shifted [   -2.1044784779e-05,    -2.1044769097e-05,     2.1044682452e-05 ] 
points_shifted [   -4.2089164895e-05,    -4.2089565319e-05,    -4.2089553175e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [    1.0242969676e+00,     1.0495517793e+00,    -2.0920318274e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.1044789793e-05,     2.1044789793e-05,     0.0000000000e+00 ] 
points_shifted [   -2.1044784779e-05,    -2.1044769097e-05,     2.1044682452e-05 ] 
points_shifted [   -4.2089164895e-05,    -4.2089565319e-05,    -4.2089553175e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


