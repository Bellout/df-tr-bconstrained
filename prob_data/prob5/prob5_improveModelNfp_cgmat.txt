[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 3)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -9.9999999999e-01,     9.9999999999e-01,    -6.9944050551e-15 ] 
nfp_new_point_abs     [   -3.6000000000e+00,     3.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_pivots        [   -2.2893593797e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 3)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.6000000000e+00,     3.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_fvalues#0    [    4.4560000000e+01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(3)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        3
next_position:                 3
points_shifted_.cols():        2
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.9999999999e-01,     9.9999999999e-01,    -6.9944050551e-15 ] 
points_abs_.cols():            2
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
fvalues_.cols():               2
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        3
next_position:                 3
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [   -9.9999999999e-01,     9.9999999999e-01,    -6.9944050551e-15 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -9.9999999999e-01,     9.9999999999e-01,    -6.9944050551e-15 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -3.6000000000e+00,     3.0000000000e+00,     2.0000000000e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    4.4560000000e+01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
tr_center_pt   [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_abs     [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
nfp_new_pivots        [   -4.0708124657e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
tr_center_pt   [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
nfp_new_fvalues#0    [    7.7600000000e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
tr_center_pt   [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
nfp_new_point_abs     [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
nfp_new_pivots        [   -1.7536056740e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
tr_center_pt   [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
nfp_new_fvalues#0    [    2.9599817784e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(5)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        5
next_position:                 5
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
nfp_new_point_abs     [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
nfp_new_pivots        [   -1.7085581286e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
nfp_new_fvalues#0    [    8.2960014781e+01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(6)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
nfp_new_point_abs     [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
nfp_new_pivots        [   -1.7358556894e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
nfp_new_fvalues#0    [    2.9599842272e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
nfp_new_point_abs     [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
nfp_new_pivots        [   -1.0434498298e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
nfp_new_fvalues#0    [    1.2545590596e+02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(8)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted_#8:             [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
points_abs_#8:                 [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
fvalues_#8:                    [    1.2545590596e+02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
nfp_new_point_abs     [    4.3999994960e+00,    -9.9999671501e-01,     1.1512004447e-06 ] 
nfp_new_pivots        [   -8.5303244308e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3999994960e+00,    -9.9999671501e-01,     1.1512004447e-06 ] 
nfp_new_fvalues#0    [    3.0159950544e+01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted_#8:             [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
points_abs_#8:                 [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
fvalues_#8:                    [    1.2545590596e+02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted_#8:             [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_shifted_#9:             [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
points_abs_#8:                 [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
points_abs_#9:                 [    4.3999994960e+00,    -9.9999671501e-01,     1.1512004447e-06 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
fvalues_#8:                    [    1.2545590596e+02 ] 
fvalues_#9:                    [    3.0159950544e+01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_shifted [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    6.9999992624e+00,    -2.6189227046e+00,     2.0000010609e+00 ] 
nfp_new_point_abs     [    4.3999992624e+00,    -6.1892270461e-01,     4.0000010609e+00 ] 
nfp_new_pivots        [   -7.5534280150e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_shifted [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
tr_center_pt   [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3999992624e+00,    -6.1892270461e-01,     4.0000010609e+00 ] 
nfp_new_fvalues#0    [    4.8034862259e+02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted_#8:             [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_shifted_#9:             [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999992624e+00,    -2.6189227046e+00,     2.0000010609e+00 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
points_abs_#8:                 [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
points_abs_#9:                 [    4.3999994960e+00,    -9.9999671501e-01,     1.1512004447e-06 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
fvalues_#8:                    [    1.2545590596e+02 ] 
fvalues_#9:                    [    3.0159950544e+01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01,    -3.7301318371e-01 ] 
points_shifted_#3:             [    1.0000000000e+00,    -1.0000000000e+00,     3.5527136788e-15 ] 
points_shifted_#4:             [    3.0000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_shifted_#5:             [    4.9999997615e+00,    -9.9999675317e-01,     1.1312004229e-06 ] 
points_shifted_#6:             [    6.9999992542e+00,     1.0000029012e+00,    -1.9999973303e+00 ] 
points_shifted_#7:             [    6.9999993994e+00,     1.0000024665e+00,     2.0000006703e+00 ] 
points_shifted_#8:             [    6.9999979760e+00,    -2.9999964505e+00,     1.3258248821e-01 ] 
points_shifted_#9:             [    6.9999994960e+00,    -2.9999967150e+00,    -1.9999988488e+00 ] 
points_shifted_#10:             [    6.9999992624e+00,    -2.6189227046e+00,     2.0000010609e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    6.9999992624e+00,    -2.6189227046e+00,     2.0000010609e+00 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [   -2.6000000000e+00,     2.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#3:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#4:                 [    4.0000000000e-01,     3.0000000000e+00,     4.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    4.3999992542e+00,     3.0000029012e+00,     2.6697431310e-06 ] 
points_abs_#7:                 [    4.3999993994e+00,     3.0000024665e+00,     4.0000006703e+00 ] 
points_abs_#8:                 [    4.3999979760e+00,    -9.9999645053e-01,     2.1325824882e+00 ] 
points_abs_#9:                 [    4.3999994960e+00,    -9.9999671501e-01,     1.1512004447e-06 ] 
points_abs_#10:                 [    4.3999992624e+00,    -6.1892270461e-01,     4.0000010609e+00 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    2.1160000000e+01 ] 
fvalues_#2:                    [    2.2374008970e+01 ] 
fvalues_#3:                    [    7.7600000000e+00 ] 
fvalues_#4:                    [    7.7600000000e+00 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    8.2960014781e+01 ] 
fvalues_#7:                    [    2.9599842272e+00 ] 
fvalues_#8:                    [    1.2545590596e+02 ] 
fvalues_#9:                    [    3.0159950544e+01 ] 
fvalues_#10:                    [    4.8034862259e+02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
nfp_new_point_abs     [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
nfp_new_pivots        [   -1.3250056515e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
nfp_new_fvalues#0    [    1.1683565467e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#3:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#4:             [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted_#5:             [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted_#6:             [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted_#7:             [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted_#8:             [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#3:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#4:                 [    4.0000000000e-01,    -1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    3.9999985760e-01,    -9.9999663770e-01,     1.2010104316e-06 ] 
points_abs_#7:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#8:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    2.2980619940e-01 ] 
fvalues_#3:                    [    3.5584120428e+00 ] 
fvalues_#4:                    [    8.2960000000e+01 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    2.9599815417e+00 ] 
fvalues_#7:                    [    7.7600000000e+00 ] 
fvalues_#8:                    [    2.2374008970e+01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#3:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#4:             [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted_#5:             [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted_#6:             [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted_#7:             [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted_#8:             [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
points_shifted_#9:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#3:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#4:                 [    4.0000000000e-01,    -1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    3.9999985760e-01,    -9.9999663770e-01,     1.2010104316e-06 ] 
points_abs_#7:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#8:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#9:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    2.2980619940e-01 ] 
fvalues_#3:                    [    3.5584120428e+00 ] 
fvalues_#4:                    [    8.2960000000e+01 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    2.9599815417e+00 ] 
fvalues_#7:                    [    7.7600000000e+00 ] 
fvalues_#8:                    [    2.2374008970e+01 ] 
fvalues_#9:                    [    1.1683565467e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
nfp_new_point_abs     [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
nfp_new_pivots        [   -6.9615187373e-01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
nfp_new_fvalues#0    [    2.0408758882e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#3:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#4:             [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted_#5:             [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted_#6:             [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted_#7:             [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted_#8:             [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
points_shifted_#9:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#3:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#4:                 [    4.0000000000e-01,    -1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    3.9999985760e-01,    -9.9999663770e-01,     1.2010104316e-06 ] 
points_abs_#7:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#8:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#9:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    2.2980619940e-01 ] 
fvalues_#3:                    [    3.5584120428e+00 ] 
fvalues_#4:                    [    8.2960000000e+01 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    2.9599815417e+00 ] 
fvalues_#7:                    [    7.7600000000e+00 ] 
fvalues_#8:                    [    2.2374008970e+01 ] 
fvalues_#9:                    [    1.1683565467e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#3:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#4:             [   -9.8783112690e-08,    -1.5355572806e+00,     1.9999988216e+00 ] 
points_shifted_#5:             [    1.9999996627e+00,     4.6444596625e-01,     1.9999999528e+00 ] 
points_shifted_#6:             [   -2.4118311004e-07,    -1.5355539183e+00,     2.2587000382e-08 ] 
points_shifted_#7:             [   -2.0000000988e+00,     4.6444271942e-01,     1.9999988216e+00 ] 
points_shifted_#8:             [   -2.6852764124e+00,     1.8702346565e+00,     1.6269856379e+00 ] 
points_shifted_#9:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted_#10:             [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#3:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#4:                 [    4.0000000000e-01,    -1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#5:                 [    2.3999997615e+00,     1.0000032468e+00,     2.0000011312e+00 ] 
points_abs_#6:                 [    3.9999985760e-01,    -9.9999663770e-01,     1.2010104316e-06 ] 
points_abs_#7:                 [   -1.6000000000e+00,     1.0000000000e+00,     2.0000000000e+00 ] 
points_abs_#8:                 [   -2.2852763136e+00,     2.4057919371e+00,     1.6269868163e+00 ] 
points_abs_#9:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
points_abs_#10:                 [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    2.2980619940e-01 ] 
fvalues_#3:                    [    3.5584120428e+00 ] 
fvalues_#4:                    [    8.2960000000e+01 ] 
fvalues_#5:                    [    2.9599817784e+00 ] 
fvalues_#6:                    [    2.9599815417e+00 ] 
fvalues_#7:                    [    7.7600000000e+00 ] 
fvalues_#8:                    [    2.2374008970e+01 ] 
fvalues_#9:                    [    1.1683565467e+00 ] 
fvalues_#10:                    [    2.0408758882e-01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
tr_center_pt   [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
nfp_new_point_abs     [    2.5043980008e-02,     1.6055847193e-01,    -1.2500104334e-01 ] 
nfp_new_pivots        [   -2.8648616107e-01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
tr_center_pt   [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    2.5043980008e-02,     1.6055847193e-01,    -1.2500104334e-01 ] 
nfp_new_fvalues#0    [    2.5013640071e-02 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted_#3:             [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted_#4:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted_#5:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#6:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#7:             [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted_#8:             [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    6.5000008825e-01,     7.8555726661e-01,     2.5000115424e-01 ] 
points_abs_#3:                 [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
points_abs_#4:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
points_abs_#5:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#6:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#7:                 [    6.5000005806e-01,     7.8555666953e-01,     2.1529847382e-01 ] 
points_abs_#8:                 [    2.7504190892e-01,     4.1055750764e-01,     1.2499780438e-01 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    1.0064166149e-01 ] 
fvalues_#3:                    [    2.0408758882e-01 ] 
fvalues_#4:                    [    1.1683565467e+00 ] 
fvalues_#5:                    [    2.2980619940e-01 ] 
fvalues_#6:                    [    3.5584120428e+00 ] 
fvalues_#7:                    [    1.2412699906e-01 ] 
fvalues_#8:                    [    2.5013957555e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted_#3:             [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted_#4:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted_#5:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#6:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#7:             [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted_#8:             [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
points_shifted_#9:             [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    6.5000008825e-01,     7.8555726661e-01,     2.5000115424e-01 ] 
points_abs_#3:                 [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
points_abs_#4:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
points_abs_#5:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#6:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#7:                 [    6.5000005806e-01,     7.8555666953e-01,     2.1529847382e-01 ] 
points_abs_#8:                 [    2.7504190892e-01,     4.1055750764e-01,     1.2499780438e-01 ] 
points_abs_#9:                 [    2.5043980008e-02,     1.6055847193e-01,    -1.2500104334e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    1.0064166149e-01 ] 
fvalues_#3:                    [    2.0408758882e-01 ] 
fvalues_#4:                    [    1.1683565467e+00 ] 
fvalues_#5:                    [    2.2980619940e-01 ] 
fvalues_#6:                    [    3.5584120428e+00 ] 
fvalues_#7:                    [    1.2412699906e-01 ] 
fvalues_#8:                    [    2.5013957555e-02 ] 
fvalues_#9:                    [    2.5013640071e-02 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
points_shifted [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
tr_center_pt   [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -1.2495661534e-01,    -6.2499833965e-01,     1.2499716406e-01 ] 
nfp_new_point_abs     [    2.7504348344e-01,    -8.9441059063e-02,     1.2499834249e-01 ] 
nfp_new_pivots        [   -1.7857400525e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
points_shifted [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
tr_center_pt   [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [    2.7504348344e-01,    -8.9441059063e-02,     1.2499834249e-01 ] 
nfp_new_fvalues#0    [    1.3496353361e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted_#3:             [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted_#4:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted_#5:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#6:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#7:             [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted_#8:             [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
points_shifted_#9:             [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.2495661534e-01,    -6.2499833965e-01,     1.2499716406e-01 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    6.5000008825e-01,     7.8555726661e-01,     2.5000115424e-01 ] 
points_abs_#3:                 [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
points_abs_#4:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
points_abs_#5:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#6:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#7:                 [    6.5000005806e-01,     7.8555666953e-01,     2.1529847382e-01 ] 
points_abs_#8:                 [    2.7504190892e-01,     4.1055750764e-01,     1.2499780438e-01 ] 
points_abs_#9:                 [    2.5043980008e-02,     1.6055847193e-01,    -1.2500104334e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    1.0064166149e-01 ] 
fvalues_#3:                    [    2.0408758882e-01 ] 
fvalues_#4:                    [    1.1683565467e+00 ] 
fvalues_#5:                    [    2.2980619940e-01 ] 
fvalues_#6:                    [    3.5584120428e+00 ] 
fvalues_#7:                    [    1.2412699906e-01 ] 
fvalues_#8:                    [    2.5013957555e-02 ] 
fvalues_#9:                    [    2.5013640071e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.4999998947e-01,     2.4999998603e-01,     2.4999997582e-01 ] 
points_shifted_#3:             [    3.6527365354e-02,     2.4999979213e-01,     2.4999976847e-01 ] 
points_shifted_#4:             [    2.4999954372e-01,     2.4999973099e-01,    -2.4999790876e-01 ] 
points_shifted_#5:             [    4.9999971986e-01,    -1.1489718753e-01,     4.9999987163e-01 ] 
points_shifted_#6:             [    9.9999990652e-01,    -9.9999984095e-01,    -9.9999993127e-01 ] 
points_shifted_#7:             [    2.4999995928e-01,     2.4999938894e-01,     2.1529729539e-01 ] 
points_shifted_#8:             [   -1.2495818986e-01,    -1.2499977294e-01,     1.2499662596e-01 ] 
points_shifted_#9:             [   -3.7495611877e-01,    -3.7499880865e-01,    -1.2500222176e-01 ] 
points_shifted_#10:             [   -1.2495661534e-01,    -6.2499833965e-01,     1.2499716406e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.2495661534e-01,    -6.2499833965e-01,     1.2499716406e-01 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [    4.0000009878e-01,     5.3555728058e-01,     1.1784234313e-06 ] 
points_abs_#2:                 [    6.5000008825e-01,     7.8555726661e-01,     2.5000115424e-01 ] 
points_abs_#3:                 [    4.3652746414e-01,     7.8555707272e-01,     2.5000094689e-01 ] 
points_abs_#4:                 [    6.4999964250e-01,     7.8555701158e-01,    -2.4999673034e-01 ] 
points_abs_#5:                 [    8.9999981864e-01,     4.2066009305e-01,     5.0000105005e-01 ] 
points_abs_#6:                 [    1.4000000053e+00,    -4.6444256037e-01,    -9.9999875284e-01 ] 
points_abs_#7:                 [    6.5000005806e-01,     7.8555666953e-01,     2.1529847382e-01 ] 
points_abs_#8:                 [    2.7504190892e-01,     4.1055750764e-01,     1.2499780438e-01 ] 
points_abs_#9:                 [    2.5043980008e-02,     1.6055847193e-01,    -1.2500104334e-01 ] 
points_abs_#10:                 [    2.7504348344e-01,    -8.9441059063e-02,     1.2499834249e-01 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    1.0064165615e-01 ] 
fvalues_#2:                    [    1.0064166149e-01 ] 
fvalues_#3:                    [    2.0408758882e-01 ] 
fvalues_#4:                    [    1.1683565467e+00 ] 
fvalues_#5:                    [    2.2980619940e-01 ] 
fvalues_#6:                    [    3.5584120428e+00 ] 
fvalues_#7:                    [    1.2412699906e-01 ] 
fvalues_#8:                    [    2.5013957555e-02 ] 
fvalues_#9:                    [    2.5013640071e-02 ] 
fvalues_#10:                    [    1.3496353361e-01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
nfp_new_point_abs     [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
nfp_new_pivots        [   -2.8913273377e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
nfp_new_fvalues#0    [    3.3322124962e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(6)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        5
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_abs_.cols():            5
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        6
next_position:                 6
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
nfp_new_point_abs     [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
nfp_new_pivots        [   -1.2442356871e-02 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 7)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
nfp_new_fvalues#0    [    4.5398441899e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(7)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        6
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_abs_.cols():            6
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        7
next_position:                 7
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
nfp_new_point_abs     [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
nfp_new_pivots        [   -4.9667185063e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 8)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
nfp_new_fvalues#0    [    4.2298367057e-05 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(8)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        7
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_abs_.cols():            7
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
fvalues_.cols():               7
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        8
next_position:                 8
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted_#8:             [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
points_abs_#8:                 [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
fvalues_#8:                    [    4.2298367057e-05 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
nfp_new_point_abs     [   -3.4504605835e-01,    -2.8747853197e-01,    -2.9028555394e-01 ] 
nfp_new_pivots        [   -4.3485919427e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 9)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.4504605835e-01,    -2.8747853197e-01,    -2.9028555394e-01 ] 
nfp_new_fvalues#0    [    3.3140201558e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(9)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        8
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted_#8:             [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
points_abs_.cols():            8
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
points_abs_#8:                 [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
fvalues_.cols():               8
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
fvalues_#8:                    [    4.2298367057e-05 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        9
next_position:                 9
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted_#8:             [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_shifted_#9:             [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
points_abs_#8:                 [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
points_abs_#9:                 [   -3.4504605835e-01,    -2.8747853197e-01,    -2.9028555394e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
fvalues_#8:                    [    4.2298367057e-05 ] 
fvalues_#9:                    [    3.3140201558e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_shifted [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    9.2260207952e-02,     3.0439975454e-02,     4.7081703394e-02 ] 
nfp_new_point_abs     [   -2.8257154561e-01,    -3.4995305041e-01,    -2.9028535649e-01 ] 
nfp_new_pivots        [   -7.2183921674e-03 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_shifted [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
tr_center_pt   [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 10)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -2.8257154561e-01,    -3.4995305041e-01,    -2.9028535649e-01 ] 
nfp_new_fvalues#0    [    4.5529424536e-03 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(10)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        9
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted_#8:             [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_shifted_#9:             [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2260207952e-02,     3.0439975454e-02,     4.7081703394e-02 ] 
points_abs_.cols():            9
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
points_abs_#8:                 [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
points_abs_#9:                 [   -3.4504605835e-01,    -2.8747853197e-01,    -2.9028555394e-01 ] 
fvalues_.cols():               9
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
fvalues_#8:                    [    4.2298367057e-05 ] 
fvalues_#9:                    [    3.3140201558e-03 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        10
next_position:                 10
points_shifted_.cols():        10
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    6.1023084797e-02,     6.1677442167e-02,     1.5844207196e-02 ] 
points_shifted_#3:             [    7.6028189054e-03,    -1.0086754693e-01,    -1.2495026767e-01 ] 
points_shifted_#4:             [    2.4369793672e-01,     2.4988217025e-01,     1.1247131286e-01 ] 
points_shifted_#5:             [    3.6864828103e-01,     3.5427713711e-01,     2.1665341931e-01 ] 
points_shifted_#6:             [    2.9785739108e-02,     9.2914798562e-02,    -1.5393127270e-02 ] 
points_shifted_#7:             [    9.2259698138e-02,     3.0442605015e-02,    -1.5390396850e-02 ] 
points_shifted_#8:             [    9.2250220258e-02,     9.2896274910e-02,    -1.5390634837e-02 ] 
points_shifted_#9:             [    2.9785695213e-02,     9.2914493901e-02,     4.7081505941e-02 ] 
points_shifted_#10:             [    9.2260207952e-02,     3.0439975454e-02,     4.7081703394e-02 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    9.2260207952e-02,     3.0439975454e-02,     4.7081703394e-02 ] 
points_abs_.cols():            10
points_abs_.rows():            3
points_abs_#1:                 [   -3.7483175356e-01,    -3.8039302587e-01,    -3.3736705989e-01 ] 
points_abs_#2:                 [   -3.1380866877e-01,    -3.1871558370e-01,    -3.2152285269e-01 ] 
points_abs_#3:                 [   -3.6722893466e-01,    -4.8126057280e-01,    -4.6231732755e-01 ] 
points_abs_#4:                 [   -1.3113381684e-01,    -1.3051085562e-01,    -2.2489574702e-01 ] 
points_abs_#5:                 [   -6.1834725329e-03,    -2.6115888759e-02,    -1.2071364057e-01 ] 
points_abs_#6:                 [   -3.4504601445e-01,    -2.8747822731e-01,    -3.5276018716e-01 ] 
points_abs_#7:                 [   -2.8257205543e-01,    -3.4995042085e-01,    -3.5275745674e-01 ] 
points_abs_#8:                 [   -2.8258153330e-01,    -2.8749675096e-01,    -3.5275769472e-01 ] 
points_abs_#9:                 [   -3.4504605835e-01,    -2.8747853197e-01,    -2.9028555394e-01 ] 
points_abs_#10:                 [   -2.8257154561e-01,    -3.4995305041e-01,    -2.9028535649e-01 ] 
fvalues_.cols():               10
fvalues_.rows():               1
fvalues_#1:                    [    3.4354816051e-05 ] 
fvalues_#2:                    [    2.4077876296e-05 ] 
fvalues_#3:                    [    1.3003343268e-02 ] 
fvalues_#4:                    [    7.9749590574e-05 ] 
fvalues_#5:                    [    4.7738106841e-04 ] 
fvalues_#6:                    [    3.3322124962e-03 ] 
fvalues_#7:                    [    4.5398441899e-03 ] 
fvalues_#8:                    [    4.2298367057e-05 ] 
fvalues_#9:                    [    3.3140201558e-03 ] 
fvalues_#10:                    [    4.5529424536e-03 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4032385009e-01,    -3.4032143645e-01,    -3.4531961229e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -1.3654571078e-03,    -1.4811038895e-03,     5.0109243810e-03 ] 
points_shifted [   -3.1814933779e-03,    -3.1704373447e-03,     1.1754957809e-02 ] 
points_shifted [    2.6515181323e-02,     2.1605852745e-02,     2.3796759597e-02 ] 
points_shifted [   -2.3911479300e-02,    -2.3997135329e-02,    -1.7170924777e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4032385009e-01,    -3.4032143645e-01,    -3.4531961229e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -3.2321811257e-03,     3.2052828883e-03,    -1.7315491420e-03 ] 
points_shifted [   -1.3654571078e-03,    -1.4811038895e-03,     5.0109243810e-03 ] 
points_shifted [   -3.1814933779e-03,    -3.1704373447e-03,     1.1754957809e-02 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4032385009e-01,    -3.4032143645e-01,    -3.4531961229e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.6571987882e-03,    -1.6571984877e-03,     1.6571986568e-03 ] 
points_shifted [   -3.2321811257e-03,     3.2052828883e-03,    -1.7315491420e-03 ] 
points_shifted [   -1.3654571078e-03,    -1.4811038895e-03,     5.0109243810e-03 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4032385009e-01,    -3.4032143645e-01,    -3.4531961229e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -8.2859941634e-04,    -8.2859941634e-04,    -8.2859941634e-04 ] 
points_shifted [    1.6571987882e-03,    -1.6571984877e-03,     1.6571986568e-03 ] 
points_shifted [   -3.2321811257e-03,     3.2052828883e-03,    -1.7315491420e-03 ] 
tr_center_pt   [   -8.2859941634e-04,    -8.2859941634e-04,    -8.2859941634e-04 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
points_shifted [    2.4857982046e-03,    -8.2859907137e-04,     2.4857980731e-03 ] 
points_shifted [    8.2859941634e-04,     8.2859941634e-04,     8.2859941634e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
points_shifted [    8.2859941634e-04,     8.2859941634e-04,     8.2859941634e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
points_shifted [    8.2859941634e-04,     8.2859941634e-04,     8.2859941634e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [    2.5893731749e-05,    -5.1381479697e-07,     2.5893731749e-05 ] 
nfp_new_point_abs     [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
nfp_new_pivots        [   -5.1787328901e-05 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
nfp_new_fvalues#0    [    1.1867107044e-09 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted_#3:             [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.5893731749e-05,    -5.1381479697e-07,     2.5893731749e-05 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#2:                 [   -3.4135959879e-01,    -3.4094288616e-01,    -3.4594106206e-01 ] 
points_abs_#3:                 [   -3.4073815118e-01,    -3.4073573968e-01,    -3.4656250487e-01 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    6.2991408682e-10 ] 
fvalues_#2:                    [    1.7427350472e-07 ] 
fvalues_#3:                    [    1.1584988499e-09 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted_#3:             [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
points_shifted_#4:             [    2.5893731749e-05,    -5.1381479697e-07,     2.5893731749e-05 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [    2.5893731749e-05,    -5.1381479697e-07,     2.5893731749e-05 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#2:                 [   -3.4135959879e-01,    -3.4094288616e-01,    -3.4594106206e-01 ] 
points_abs_#3:                 [   -3.4073815118e-01,    -3.4073573968e-01,    -3.4656250487e-01 ] 
points_abs_#4:                 [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    6.2991408682e-10 ] 
fvalues_#2:                    [    1.7427350472e-07 ] 
fvalues_#3:                    [    1.1584988499e-09 ] 
fvalues_#4:                    [    1.1867107044e-09 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [    4.1429832292e-04,     4.1429618822e-04,    -4.1429316792e-04 ] 
points_shifted [    2.5893731749e-05,    -5.1381479697e-07,     2.5893731749e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893731749e-05,    -5.1381479699e-07,     2.5893731749e-05 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 
nfp_new_point_abs     [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
nfp_new_pivots        [   -1.0567169162e-04 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893731749e-05,    -5.1381479699e-07,     2.5893731749e-05 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
nfp_new_fvalues#0    [    6.0444789216e-10 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5893731749e-05,    -5.1381479699e-07,     2.5893731749e-05 ] 
points_shifted_#3:             [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#2:                 [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
points_abs_#3:                 [   -3.4135959879e-01,    -3.4094288616e-01,    -3.4594106206e-01 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    6.2991408682e-10 ] 
fvalues_#2:                    [    1.1867107044e-09 ] 
fvalues_#3:                    [    1.7427350472e-07 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5893731749e-05,    -5.1381479699e-07,     2.5893731749e-05 ] 
points_shifted_#3:             [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted_#4:             [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#2:                 [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
points_abs_#3:                 [   -3.4135959879e-01,    -3.4094288616e-01,    -3.4594106206e-01 ] 
points_abs_#4:                 [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    6.2991408682e-10 ] 
fvalues_#2:                    [    1.1867107044e-09 ] 
fvalues_#3:                    [    1.7427350472e-07 ] 
fvalues_#4:                    [    6.0444789216e-10 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893731749e-05,    -5.1381479699e-07,     2.5893731749e-05 ] 
points_shifted [   -2.0714928143e-04,     2.0714970684e-04,     2.0714964700e-04 ] 
points_shifted [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 
tr_center_pt   [   -2.5893720322e-05,    -2.5893726812e-05,     2.5893715907e-05 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
points_shifted [   -1.8125556111e-04,     2.3304343365e-04,     1.8125593109e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
points_shifted [   -1.8125556111e-04,     2.3304343365e-04,     1.8125593109e-04 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

3 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_shifted [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
nfp_new_point_abs     [   -3.4119129008e-01,    -3.4116298273e-01,    -3.4610937113e-01 ] 
nfp_new_pivots        [   -5.0779800712e-05 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/3)
nfp_new_point_abs#0  [   -3.4119129008e-01,    -3.4116298273e-01,    -3.4610937113e-01 ] 
nfp_new_fvalues#0    [    1.3999286439e-09 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted_#3:             [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
points_abs_.cols():            3
points_abs_.rows():            3
points_abs_#1:                 [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
points_abs_#2:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#3:                 [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    6.0444789216e-10 ] 
fvalues_#2:                    [    6.2991408682e-10 ] 
fvalues_#3:                    [    1.1867107044e-09 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       10
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        3
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted_#3:             [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
points_shifted_#4:             [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 3
nfp_new_point_shifted_#1       [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
points_abs_.cols():            4
points_abs_.rows():            3
points_abs_#1:                 [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
points_abs_#2:                 [   -3.4115244951e-01,    -3.4115003586e-01,    -3.4614821170e-01 ] 
points_abs_#3:                 [   -3.4112655577e-01,    -3.4115054968e-01,    -3.4612231797e-01 ] 
points_abs_#4:                 [   -3.4119129008e-01,    -3.4116298273e-01,    -3.4610937113e-01 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    6.0444789216e-10 ] 
fvalues_#2:                    [    6.2991408682e-10 ] 
fvalues_#3:                    [    1.1867107044e-09 ] 
fvalues_#4:                    [    1.3999286439e-09 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
points_shifted [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


[ improveModelNfp() ]
shift_center   [   -3.4117834323e-01,    -3.4117592959e-01,    -3.4612231799e-01 ] 
bl_shifted     [                -Inf,                 -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [   -1.2946856813e-05,     1.2946863324e-05,     1.2946859918e-05 ] 
points_shifted [    2.5893720322e-05,     2.5893726812e-05,    -2.5893715907e-05 ] 
points_shifted [    5.1787452070e-05,     2.5379912015e-05,     1.5841494783e-11 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3

End-if: (point_found)
End-for-loop[2]: (poly_i <= block_end)
End-for-loop[1]: (attempts<=3)
exit_flag=0
=====================================


