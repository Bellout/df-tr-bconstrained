/***********************************************************
 Copyright (C) 2017-2019 Mathias Bellout
 <mathias.bellout@petroleumcyberneticsgroup.no>
 <chakibbb-pcg@gmail.com>

 This file is part of the FieldOpt project.

 FieldOpt is free software: you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation, either version
 3 of the License, or (at your option) any later version.

 FieldOpt is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty
 of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 the GNU General Public License for more details.

 You should have received a copy of the
 GNU General Public License along with FieldOpt.
 If not, see <http://www.gnu.org/licenses/>.
***********************************************************/

#ifndef FIELDOPT_TEST_TR_DFO_DATA_H
#define FIELDOPT_TEST_TR_DFO_DATA_H

#include <Eigen/Core>

namespace TestResources {
    class TrustRegionModelData {

    public:

        struct prob {
            Eigen::MatrixXd xm; // tr_model.points_abs
            Eigen::MatrixXd fm; // tr_model.fvalues

            Eigen::MatrixXd sm; // tr_model.points_shifted

            Eigen::MatrixXd cm; // tr_model.tr_center
            Eigen::MatrixXd rm; // tr_model.radius

            Eigen::MatrixXd pcm; // tr_model.pivot_polynomials_coefficients
            Eigen::MatrixXd pdm; // tr_model.pivot_polynomials_dimensions

            Eigen::MatrixXd vm; // tr_model.pivot_values

            Eigen::MatrixXd mcm; // tr_model.modeling_coefficients
            Eigen::MatrixXd mdm; // tr_model.modeling_dimensions

            vector<int> idx;; // 

            Eigen::MatrixXd pnp; // point_new_polynomials
            std::vector<Eigen::MatrixXd> v_pnp; // point_new_polynomials container

            Eigen::MatrixXd obp; // tr subproblem polynomials 
            std::vector<Eigen::MatrixXd> v_obp; // tr subproblem polynomials container


        };

        // Trust region problems from C.Guliani
        prob prob1;
        prob prob2;
        prob prob3;
        prob prob4;
        prob prob5;
        prob prob6;
        prob prob7;
        prob prob8;
        prob prob9;
        prob prob10;

        TrustRegionModelData() {


            // ==========================================================================================
            // ==============================  prob8  ==============================
            // ==========================================================================================

            // seed.Type: twister
            // seed.Seed:      0
            // seed.State:      5489.0 1301868182.0 2938499221.0 2950281878.0 1875628136.0  751856242.0  944701696.0 2243192071.0  694061057.0  219885934.0 2066767472.0 3182869408.0  485472502.0 2336857883.0 1071588843.0 3418470598.0  951210697.0 3693558366.0 2923482051.0 1793174584.0 2982310801.0 1586906132.0 1951078751.0 1808158765.0 1733897588.0  431328322.0 4202539044.0  530658942.0 1714810322.0 3025256284.0 3342585396.0 1937033938.0 2640572511.0 1654299090.0 3692403553.0 4233871309.0 3497650794.0  862629010.0 2943236032.0 2426458545.0 1603307207.0 1133453895.0 3099196360.0 2208657629.0 2747653927.0  931059398.0  761573964.0 3157853227.0  785880413.0  730313442.0  124945756.0 2937117055.0 3295982469.0 1724353043.0 3021675344.0 3884886417.0 4010150098.0 4056961966.0  699635835.0 2681338818.0 1339167484.0  720757518.0 2800161476.0 2376097373.0 1532957371.0 3902664099.0 1238982754.0 3725394514.0 3449176889.0 3570962471.0 4287636090.0 4087307012.0 3603343627.0  202242161.0 2995682783.0 1620962684.0 3704723357.0  371613603.0 2814834333.0 2111005706.0  624778151.0 2094172212.0 4284947003.0 1211977835.0  991917094.0 1570449747.0 2962370480.0 1259410321.0  170182696.0  146300961.0 2836829791.0  619452428.0 2723670296.0 1881399711.0 1161269684.0 1675188680.0 4132175277.0  780088327.0 3409462821.0 1036518241.0 1834958505.0 3048448173.0  161811569.0  618488316.0   44795092.0 3918322701.0 1924681712.0 3239478144.0  383254043.0 4042306580.0 2146983041.0 3992780527.0 3518029708.0 3545545436.0 3901231469.0 1896136409.0 2028528556.0 2339662006.0  501326714.0 2060962201.0 2502746480.0  561575027.0  581893337.0 3393774360.0 1778912547.0 3626131687.0 2175155826.0  319853231.0  986875531.0  819755096.0 2915734330.0 2688355739.0 3482074849.0    2736559.0 2296975761.0 1029741190.0 2876812646.0  690154749.0  579200347.0 4027461746.0 1285330465.0 2701024045.0 4117700889.0  759495121.0 3332270341.0 2313004527.0 2277067795.0 4131855432.0 2722057515.0 1264804546.0 3848622725.0 2211267957.0 4100593547.0  959123777.0 2130745407.0 3194437393.0  486673947.0 1377371204.0   17472727.0  352317554.0 3955548058.0  159652094.0 1232063192.0 3835177280.0   49423123.0 3083993636.0     733092.0 2120519771.0 2573409834.0 1112952433.0 3239502554.0  761045320.0 1087580692.0 2540165110.0  641058802.0 1792435497.0 2261799288.0 1579184083.0  627146892.0 2165744623.0 2200142389.0 2167590760.0 2381418376.0 1793358889.0 3081659520.0 1663384067.0 2009658756.0 2689600308.0  739136266.0 2304581039.0 3529067263.0  591360555.0  525209271.0 3131882996.0  294230224.0 2076220115.0 3113580446.0 1245621585.0 1386885462.0 3203270426.0  123512128.0   12350217.0  354956375.0 4282398238.0 3356876605.0 3888857667.0  157639694.0 2616064085.0 1563068963.0 2762125883.0 4045394511.0 4180452559.0 3294769488.0 1684529556.0 1002945951.0 3181438866.0   22506664.0  691783457.0 2685221343.0  171579916.0 3878728600.0 2475806724.0 2030324028.0 3331164912.0 1708711359.0 1970023127.0 2859691344.0 2588476477.0 2748146879.0  136111222.0 2967685492.0  909517429.0 2835297809.0 3206906216.0 3186870716.0  341264097.0 2542035121.0 3353277068.0  548223577.0 3170936588.0 1678403446.0  297435620.0 2337555430.0  466603495.0 1132321815.0 1208589219.0  696392160.0  894244439.0 2562678859.0  470224582.0 3306867480.0  201364898.0 2075966438.0 1767227936.0 2929737987.0 3674877796.0 2654196643.0 3692734598.0 3528895099.0 2796780123.0 3048728353.0  842329300.0  191554730.0 2922459673.0 3489020079.0 3979110629.0 1022523848.0 2202932467.0 3583655201.0 3565113719.0  587085778.0 4176046313.0 3013713762.0  950944241.0  396426791.0 3784844662.0 3477431613.0 3594592395.0 2782043838.0 3392093507.0 3106564952.0 2829419931.0 1358665591.0 2206918825.0 3170783123.0   31522386.0 2988194168.0 1782249537.0 1105080928.0  843500134.0 1225290080.0 1521001832.0 3605886097.0 2802786495.0 2728923319.0 3996284304.0  903417639.0 1171249804.0 1020374987.0 2824535874.0  423621996.0 1988534473.0 2493544470.0 1008604435.0 1756003503.0 1488867287.0 1386808992.0  732088248.0 1780630732.0 2482101014.0  976561178.0 1543448953.0 2602866064.0 2021139923.0 1952599828.0 2360242564.0 2117959962.0 2753061860.0 2388623612.0 4138193781.0 2962920654.0 2284970429.0  766920861.0 3457264692.0 2879611383.0  815055854.0 2332929068.0 1254853997.0 3740375268.0 3799380844.0 4091048725.0 2006331129.0 1982546212.0  686850534.0 1907447564.0 2682801776.0 2780821066.0  998290361.0 1342433871.0 4195430425.0  607905174.0 3902331779.0 2454067926.0 1708133115.0 1170874362.0 2008609376.0 3260320415.0 2211196135.0  433538229.0 2728786374.0 2189520818.0  262554063.0 1182318347.0 3710237267.0 1221022450.0  715966018.0 2417068910.0 2591870721.0 2870691989.0 3418190842.0 4238214053.0 1540704231.0 1575580968.0 2095917976.0 4078310857.0 2313532447.0 2110690783.0 4056346629.0 4061784526.0 1123218514.0  551538993.0  597148360.0 4120175196.0 3581618160.0 3181170517.0  422862282.0 3227524138.0 1713114790.0  662317149.0 1230418732.0  928171837.0 1324564878.0 1928816105.0 1786535431.0 2878099422.0 3290185549.0  539474248.0 1657512683.0  552370646.0 1671741683.0 3655312128.0 1552739510.0 2605208763.0 1441755014.0  181878989.0 3124053868.0 1447103986.0 3183906156.0 1728556020.0 3502241336.0 3055466967.0 1013272474.0  818402132.0 1715099063.0 2900113506.0  397254517.0 4194863039.0 1009068739.0  232864647.0 2540223708.0 2608288560.0 2415367765.0  478404847.0 3455100648.0 3182600021.0 2115988978.0  434269567.0 4117179324.0 3461774077.0  887256537.0 3545801025.0  286388911.0 3451742129.0 1981164769.0  786667016.0 3310123729.0 3097811076.0 2224235657.0 2959658883.0 3370969234.0 2514770915.0 3345656436.0 2677010851.0 2206236470.0  271648054.0 2342188545.0 4292848611.0 3646533909.0 3754009956.0 3803931226.0 4160647125.0 1477814055.0 4043852216.0 1876372354.0 3133294443.0 3871104810.0 3177020907.0 2074304428.0 3479393793.0  759562891.0  164128153.0 1839069216.0 2114162633.0 3989947309.0 3611054956.0 1333547922.0  835429831.0  494987340.0  171987910.0 1252001001.0  370809172.0 3508925425.0 2535703112.0 1276855041.0 1922855120.0  835673414.0 3030664304.0  613287117.0  171219893.0 3423096126.0 3376881639.0 2287770315.0 1658692645.0 1262815245.0 3957234326.0 1168096164.0 2968737525.0 2655813712.0 2132313144.0 3976047964.0  326516571.0  353088456.0 3679188938.0 3205649712.0 2654036126.0 1249024881.0  880166166.0  691800469.0 2229503665.0 1673458056.0 4032208375.0 1851778863.0 2563757330.0  376742205.0 1794655231.0  340247333.0 1505873033.0  396524441.0  879666767.0 3335579166.0 3260764261.0 3335999539.0  506221798.0 4214658741.0  975887814.0 2080536343.0 3360539560.0  571586418.0  138896374.0 4234352651.0 2737620262.0 3928362291.0 1516365296.0   38056726.0 3599462320.0 3585007266.0 3850961033.0  471667319.0 1536883193.0 2310166751.0 1861637689.0 2530999841.0 4139843801.0 2710569485.0  827578615.0 2012334720.0 2907369459.0 3029312804.0 2820112398.0 1965028045.0   35518606.0 2478379033.0  643747771.0 1924139484.0 4123405127.0 3811735531.0 3429660832.0 3285177704.0 1948416081.0 1311525291.0 1183517742.0 1739192232.0 3979815115.0 2567840007.0 4116821529.0  213304419.0 4125718577.0 1473064925.0 2442436592.0 1893310111.0 4195361916.0 3747569474.0  828465101.0 2991227658.0  750582866.0 1205170309.0 1409813056.0  678418130.0 1171531016.0 3821236156.0  354504587.0 4202874632.0 3882511497.0 1893248677.0 1903078632.0   26340130.0 2069166240.0 3657122492.0 3725758099.0  831344905.0  811453383.0 3447711422.0 2434543565.0 4166886888.0 3358210805.0 4142984013.0 2988152326.0 3527824853.0  982082992.0 2809155763.0  190157081.0 3340214818.0 2365432395.0 2548636180.0 2894533366.0 3474657421.0 2372634704.0 2845748389.0   43024175.0 2774226648.0 1987702864.0 3186502468.0  453610222.0 4204736567.0 1392892630.0 2471323686.0 2470534280.0 3541393095.0 4269885866.0 3909911300.0  759132955.0 1482612480.0  667715263.0 1795580598.0 2337923983.0 3390586366.0  581426223.0 1515718634.0  476374295.0  705213300.0  363062054.0 2084697697.0 2407503428.0 2292957699.0 2426213835.0 2199989172.0 1987356470.0 4026755612.0 2147252133.0  270400031.0 1367820199.0 2369854699.0 2844269403.0   79981964.0        624.0 

            // --- Initial points ---
            // x1:   0.8000000000000000  0.8000000000000000  0.8000000000000000  0.8000000000000000
            // f1:   0.1677721600000001
            // x2:   1.1147236863931789  1.2057919370756194  0.4269868162935061  1.2133758561390193
            // f2:   0.4849520948514201

            // ------------------------------------------------------------------------------------------
            // C++ [PRINT RESIZE] INITIAL POINTS

            prob8.xm.resize(4,2);
            prob8.fm.resize(1,2);

            prob8.xm.col(0) <<   0.8000000000000000,   0.8000000000000000,   0.8000000000000000,   0.8000000000000000; 
            prob8.fm.col(0) <<   0.1677721600000001;

            prob8.xm.col(1) <<   1.1147236863931789,   1.2057919370756194,   0.4269868162935061,   1.2133758561390193; 
            prob8.fm.col(1) <<   0.4849520948514201;


            // ------------------------------------------------------------------------------------------
            // C++ [PRINT RESIZE] TR_CENTER, TR_RADIUS, POINTS_SHIFTED

            prob8.cm.resize(1,1); // model.tr_center [index]
            prob8.rm.resize(1,1); // model.tr_radius
            prob8.sm.resize(4,2); // points_shifted

            // Trust region center:
            prob8.cm.col(0) <<   1.0000000000000000; 
            // Trust region radius:
            prob8.rm.col(0) <<   1.0000000000000000; 
            // Points shifted:
            prob8.sm.col(0) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.sm.col(1) <<   0.3147236863931788,   0.4057919370756193,  -0.3730131837064939,   0.4133758561390193; 

            // ------------------------------------------------------------------------------------------
            // C++ [PRINT RESIZE] CALLS FOR PIVOT_POLYNOMIALS.COEFFICIENTS, PIVOT_POLYNOMIALS.DIMENSION, MODEL.PIVOT_VALUES

            // Matrix ([6x6]) of column vectors ([6x1])
            prob8.pcm.resize(15,15); // model.pivot_polynomials.coefficients
            // Matrix ([1x6]) of column vectors ([1x1])
            prob8.pdm.resize(1,15); // model.pivot_polynomials.dimension
            // Column vector ([6x1])
            prob8.vm.resize(15,1); // model.pivot_values

            // Pivot polynomials (coeff):
            prob8.pcm.col(0) <<   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(1) <<   0.0000000000000000,   3.1773903370930823,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(2) <<   0.0000000000000000,  -1.2893593797343570,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(3) <<   0.0000000000000000,   1.1852084855173406,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(4) <<   0.0000000000000000,  -1.3134564508837001,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(5) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(6) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(7) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(8) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(9) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(10) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(11) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(12) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(13) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000; 
            prob8.pcm.col(14) <<   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   2.0000000000000000; 
            // Pivot polynomials (dim):
            prob8.pdm.col(0) <<   4.0000000000000000; 
            prob8.pdm.col(1) <<   4.0000000000000000; 
            prob8.pdm.col(2) <<   4.0000000000000000; 
            prob8.pdm.col(3) <<   4.0000000000000000; 
            prob8.pdm.col(4) <<   4.0000000000000000; 
            prob8.pdm.col(5) <<   4.0000000000000000; 
            prob8.pdm.col(6) <<   4.0000000000000000; 
            prob8.pdm.col(7) <<   4.0000000000000000; 
            prob8.pdm.col(8) <<   4.0000000000000000; 
            prob8.pdm.col(9) <<   4.0000000000000000; 
            prob8.pdm.col(10) <<   4.0000000000000000; 
            prob8.pdm.col(11) <<   4.0000000000000000; 
            prob8.pdm.col(12) <<   4.0000000000000000; 
            prob8.pdm.col(13) <<   4.0000000000000000; 
            prob8.pdm.col(14) <<   4.0000000000000000; 
            // Pivot values:
            prob8.vm.col(0) <<   1.0000000000000000,   0.3147236863931788,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 

            // ------------------------------------------------------------------------------------------
            // C++ [PRINT RESIZE] MODELING COEFFICIENTS

            // Matrix ([6x6]) of column vectors ([6x1])
            prob8.mcm.resize(15,1); // model.modeling_polynomials.coefficients
            // Matrix ([1x6]) of column vectors ([1x1])
            prob8.mdm.resize(1,1); // model.modeling_polynomials.dimension

            // Modeling polynomials (coeff):
            prob8.mcm.col(0) <<   0.1677721600000001,   1.0078044601167153,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            // Pivot polynomials (dim):
            prob8.mdm.col(0) <<   4.0000000000000000; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.6384714080933722,   1.0078044601167153,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.1999999998205279,   0.7999999999999935,   0.7999999999999935,   0.7999999999999935; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.4857720864408888,   0.1572864000470438,   0.6596439080040672,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -2.1999999994612756,  -1.1999999996409698,   0.7999999999999898,   0.7999999999999898; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.0000000000000126,   0.9192227583294413,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -1.0000000243571239,   1.9999999996316773,   1.9999999996243081,  -0.0000000000000102; 
            //  -0.9999999752849260,  -1.9999999995942110,  -1.9999999995573641,  -0.0000000000000098; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.5832705546753217,   0.1572864000470430,   0.7180157218766283,   0.0635012714204809,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -2.1999999994470048,  -1.1999999996385868,  -1.1999999996301176,   0.7999999999999907; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.0000000000000066,  -0.5307821496129292,   0.5307821496148867,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -1.0000000112983090,  -1.9999999996178310,   1.9999999996178177,   1.9999999996200919; 
            //  -0.9999999883427479,   1.9999999996178177,  -1.9999999996178308,  -1.9999999996201050; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -1.5221618812384268,   0.1572864000470353,   0.0950822761702189,   0.6864347171291877,   1.1736141582015918,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -2.1999999994615802,  -1.1999999996410582,  -1.1999999996410600,  -1.1999999996410600; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.9999999998205313,  -0.2577141362226313,   0.2577141239552816,  -0.5154282659162176,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999999194615810,  -1.9999984475343320,   1.9999984475342447,  -1.9999992235875381; 
            //  -0.5000000116157278,   1.9999996889938172,  -1.9999996889938132,   1.9999998443713214; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   3.1091605929038231,  -1.1136708995791054,  -4.9659877899496205,   4.4560838262805991,  -4.5866882985397623,   2.0730666824338830,   1.0088763482486611,   2.2216520726028079,  -1.1693329081871096,  -1.9081519595361689,   2.3167019970721530,   0.9717531783259208,   2.7127503659737551,  -2.7632011692049478,   2.0170105882962055; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.0294973882954846,   0.1095895702152723,   1.5213373050009429,   2.7999998576391691; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.8259144838204781,   0.8805637196369982,   0.1194363148531306,  -0.2388726017743371,  -1.6518289679374165,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999999864102547,   1.9999999618927957,  -1.9999993287268016,   1.9999996644310623; 
            //   0.7107774914659843,   1.9999997482809695,   1.9999966505818720,  -1.9999983251102846; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0722063459033588,   5.6907847670949607,  -6.2841802962803337,   5.9563099270398752,  -5.8644487758771024,  12.2531793378736484, -11.5308508129118117,  11.8489676335329239,  11.5463075313204939, -11.5364439301976702,  11.8398017538624245, -11.5272719302956830,  12.5228767185723733, -12.5180118649151062,  11.6973189656943095; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -1.5980425925823771,  -1.1999998828169463,   2.7999998540410695,   2.7999999828753013; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0000001014318890,   0.9516250389055155,   1.0161249658102280,  -0.0322498833272612,   0.0000002028637779,   0.9677499567869556,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9999994916270549,   1.9999989576351849,   1.9999990076390590,  -1.9999379847575083; 
            //   0.9999994916269682,  -1.9999989576351980,  -1.9999990076390723,   1.9999379847571874; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -9.7360190614861217,  -5.9506404986039971,   7.0642860789772648,  12.9430644523318232,  -1.4553567807124148,  14.6694075808198949,   1.8621137663049012,  10.1526398900718871,  18.4819235548035010,  -9.8412599625631625,  10.0220421168175378, -18.2101565422475389,   1.2069978402088974, -21.2606446094120471,  20.1239267552640406; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.7999998478533243,  -1.1999998118892574,  -1.1999999429033608,   0.5053310010790720; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.0000000774212302,  -0.0500571166987510,   1.0300104482624619,   0.9599663754432279,  -0.0000001548424611,  -0.0300403048303346,   0.0000000000000000,   1.0099936125251268,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999995092738057,  -1.9999500798579419,   1.9999989996262026,   1.9999990192661778; 
            //  -2.9999995092737128,   1.9999500798579255,  -1.9999989996262160,  -1.9999990192661909; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   3.1600610030703740,  31.8573386676348811,   2.6376790276616031,  -1.3697507923444849, -11.0806168703391510,  39.4428406338713913,  11.1421539770315476,   7.5421689536333645,  -9.5185020922051571,  -7.2285320275335003,   7.7547171172663525, -56.0397824614373050,   6.3871056194597315,  -8.4788064892317223,   8.2704725269346575; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.7999999785570255,  -1.1999998220959687,   2.7999998306308065,   2.7999999829999642; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.6666661354877905,  -0.4002087101230982,  -2.1199698843331380,  -1.2802936644376421,  -1.3333322712149143,   0.0265468210001579,   2.0000000000000000,  -0.5467254113277297,   0.0000000000000000,   0.0000000000000000,  -0.4267825992299229,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9204390772777207,  -1.9999999082286608,  -1.9999998471553966,  -1.9999997605669173; 
            //  -2.9999973659898065,   0.2399240659849275,   1.9999833259260360,  -1.8547687002703721; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -47.8419099091757261,  23.9668929456659363,  23.4778742159732801,  32.3295662034015621,  25.3817735795549808,  43.3097630986273856,  13.8986344545366265,   4.0820198604173115,  -4.9636057598539161, -16.6067227496631702,   4.7422299136275896, -54.9381980435500026,   3.2501463692437724, -14.9231031620026364, -16.4283259854089891; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -1.8280108178873031,  -1.1999999974671884,  -1.1999999993692134,  -1.1999999995156712; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.8603492949260083,  -1.4352072632474804,   0.7261866112797409,   1.7102024087244303,   1.7206985901608296,  -0.0052713200855293,  -0.5810499338594813,   0.7152007272527600,   1.0000000000000000,   0.0000000000000000,   0.5700742929048394,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9991872677269031,   1.9999999127331578,  -1.9999998833892341,  -1.9999998241881161; 
            //  -2.9999999971296649,  -1.9999999925529257,  -1.9999999949618983,  -1.9992184578809724; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -51.0314791784776318,  13.2031698363873602,  -7.7694049281016957,  38.1846502869354794,  45.0224341349888419,  55.3890355023708167,  13.8311760148155400,  -3.3732126181378383,   0.2278113429355599,  -0.8543265404190201,  -3.3648483317151801, -51.1372299727789326,   6.2918549465527782, -20.8141619935414113,  -5.3456850404292275; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -2.0405076524940831,   2.7999999611514257,  -1.1999999685574065,  -1.1999999895592652; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.9999938663063410,   0.6919722481384392,   0.2653280047945709,  -0.0733528422405155,  -1.9999877329716176,   0.9633140101402670,   0.5802117352780627,   0.1544254067242356,  -0.2098862659125046,   0.0000000000000000,  -0.6911242036670049,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999999530454646,   1.9999998839444539,   1.9999993520993322,  -1.9999998996415536; 
            //  -0.3822348233681858,   1.9999999791490131,  -1.9999996248834213,   1.9999999631250234; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -77.3429544154368216,  41.6189884883966812,  20.2182014545403703,  52.4629035260129513,  71.7681050192840360,  80.4238399259961483, -18.0109766044097341, -10.7605605630543053, -21.8205959289090217,   2.4983164794152692, -10.4944369482765225, -42.1544950583883917, -24.3312742861579743, -38.9197854212379468,   3.3593035523652226; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -1.7408019064638791,  -1.1999999775894747,  -1.1999999860136064,  -1.1999999904269607; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0041566135651712,   0.0024968527389925,  -0.0245930220139692,   0.0291681732738319,   0.0083132271318340,   0.0104151185274764,  -1.9837201728846512,   0.0041805035647433,   0.0102059822889131,   2.0000000000000000,   0.0125178534495637,  -0.0041685387381874,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9999972491635528,  -0.0079835312917631,  -1.9999999797428900,   1.9999980882731747; 
            //   0.0048215801427131,   1.9999999794213348,   0.0020799458321319,  -1.9999961703081053; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -73.6352639523930321,  16.0806341331118858,   5.6957650861571212,  73.6280016506772768,  44.3096981980108566, 105.5089431653500895, -16.1596925689162561,  11.5507606827605880,  -9.2783611071550993,   4.3078233247805278, -47.2905898076529425, -34.0319846891013285, -20.7309384896162179, -22.7769781293702422,   8.9203894596348903; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.8287892706376452,  -1.1999999988389931,  -1.1999999995162391,  -1.1999999994656525; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.8614162476231857,   0.4375120541065158,   0.8381264329683842,   0.0300938654570823,   1.7228324955555678,   0.1535891158386855,  -2.7870187006473017,   0.8614426819913937,   0.1501932101242965,   2.2260256052784735,   0.5843459779413765,   0.1385645873940055,   1.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999999441500673,  -0.2155603529070752,  -1.9999999510421058,  -1.9999998930543641; 
            //  -0.5331963612789072,  -1.9999999337057288,  -0.9336923882202227,   1.9999997315979621; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -68.2352156040186770,   3.4680782679723521,  17.1084303886534741,  54.6911976613512820,  39.8286762922804485, 117.5535789339469090, -15.0521367711716838,  -3.5460297369106510,  -3.2559525663366919,   5.3909667922613886, -32.0136035676467827, -29.9129926108146940, -20.7881053397931836, -16.8117329100251389,   4.8843414192850574; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.5217481580034140,  -1.1999999992217698,  -1.1999999994567594,  -1.1999999994298864; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.1734751948802933,   0.9112200287926562,   0.8807920761307547,  -0.0563097294283494,  -0.3469503898228272,  -0.0476726208279321,  -1.6130276152667380,  -0.1734338638410022,  -0.0466562695431178,  -0.3067784388661008,  -0.1343886168234243,   0.4804624994479574,   0.3070031671076118,   2.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -2.9999999342666266,  -1.9999999825054915,  -1.9999999648054234,   0.6140375877216324; 
            //  -2.4358659656029085,   1.1747822144100593,   1.9999996793569816,   1.9999999262396488; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -94.9656090582170975,  13.0076725189305407,  63.5866801453580308,  80.6392756560901773, -13.6735135838748327, 109.0338205525968789, -16.2227917776903467, -43.1557432510980590,  -7.5148168259325532,   4.2452694385691894, -39.5468943562278881, -33.2130567644364305,  -8.9898064282789036,  -9.2729236658512075,  53.9965985676381024; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.5255062130631641,  -1.1999999833961059,  -1.1999999844162192,  -0.4758712323047483; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) << -17.1374906646313754,  13.7333640082131723,  33.4558297384486920,  38.6978729297468504, -81.9672940516854283,  65.2772569033702439, -30.0501713826063330, -50.1356401400514073,   4.2854368585803471,   6.3296313009837473,  -2.5634133056200454, -30.0466541580502700,  -8.5383947805798126,   2.9715069841299471, 105.8928008545392743; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.7999999830510411,   1.7999999954693213,  -0.1999999928585381,   1.1518066148661972; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   5.9444428678397783,   0.1572864000470965,  -3.7179292925790572,  -3.6601954922677620,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.6999999997307790,   1.2999999999102543,   1.2999999999102543,   0.7999999999999969; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0000000000000000,  -0.6759033078069872,  -0.3240966921930134,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0000000000000033,  -0.4999999999102613,  -0.4999999999102610,   0.4999999999102615; 
            //   0.0000000000000034,   0.4999999999102613,   0.4999999999102609,  -0.4999999999102615; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   5.9444428678397756,   0.1572864000470965,  -1.2177625565913131,  -2.4613616358487289,  -3.6990005924067746,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.6999999997307420,   0.7999999999999494,   0.7999999999999885,   1.7999999998205132; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.9999999998205477,   0.4861450447186629,   1.0138549550121339,   1.4999999997308020,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -0.4999997999102779,  -0.0000008227990724,  -0.0000003945335635,   0.9999997331539354; 
            //   0.4993029110857821,  -0.9999991770086425,  -0.9999996052848505,   0.0000002666679412; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   1.0255520247300747,  -0.8388491285875321,  -0.9550758302561169,  -0.8607396899335431,  -1.3693846921928969,   0.7611318075620574,   0.2561576431157874,   0.2802250514164702,   0.3424944439843011,   0.4097305383769527,   0.3665621945797771,   0.3610928957719857,   0.6028795744338635,   0.5900851281503373,   0.8467617739189788; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.2999956364318412,   0.7999958978149451,  -0.1999967053578894,   1.0590620957911410; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.4444446828729938,  -0.3919678815280696,   0.7253008570390944,   0.3333329755110245,  -0.8888893659055402,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -0.4999999819102678,  -0.0000000179378651,  -0.9999999777607119,   0.0000000480000489; 
            //  -0.4999971199632412,  -0.9999996410621810,  -0.0000004411960294,   0.9999990398204145; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.9371307131755229,  -0.8608401452882084,  -1.2517396704106818,  -0.6322057455156306,  -1.2923276243418238,   0.5973752356369768,   0.4277676641859862,   0.3445196997697321,   0.1939653880323512,   0.5155616825973913,   0.3194157821868265,   0.4269094160198544,   0.7143996001031528,   0.5094219160770707,   0.8511754335922046; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.2999866334308688,   0.7999989136932032,  -0.1999978948449365,   0.8161070699260726; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.6297421526851511,   0.4446130984486499,   0.0276933980827667,   0.4723064965314169,  -1.2594843055963754,   0.4169197258134572,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.4999999886181642,  -0.9999999753209639,  -0.9999999694998859,   0.0000000338763057; 
            //   0.4994952883529447,  -0.0000004901488824,  -0.0000006069929291,   0.9999993222948370; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.5932928667637711,  -1.1121350798570344,  -0.8928234021839843,  -0.4559781569202449,  -1.0718491596881432,   0.9613332488315702,   0.4077478913989883,   0.1079709327946520,   0.0770145261403479,   0.3525058216898323,   0.3525059560772926,   0.7415144639210900,   0.5201877133811140,   0.5080577783870028,   0.8663457604464643; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.0829643737371047,   0.2999990173232998,  -0.6999942456118543,   1.2999952529074108; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.1538465532895015,   0.3034292439651312,   0.0811862869007922,   0.3846155308659182,   0.3076931066342133,  -0.7777570823336510,   0.0000000000000000,  -0.0683972167070639,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9999997728889177,  -1.4999991319336476,  -0.5000312457264756,   0.4999997448977514; 
            //   0.0000000147078897,  -1.4999999225006466,  -1.4999997723325664,  -0.4999999244339751; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.6010785161826894,  -1.1093934168302586,  -0.8922252717266171,  -0.4635633637418704,  -1.0760415820850886,   0.9543514185369931,   0.4216332148347445,   0.0899008318929815,   0.0750708600000375,   0.3639875151804288,   0.3467552271183644,   0.7287639142034239,   0.5306729901902073,   0.5032406771611198,   0.8612309022004179; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.0922765305188864,   0.2999990022650885,  -0.6999937237210477,   1.2999951712810385; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.7209466248736192,   0.3952531185396973,   0.0523800953093881,  -0.0523667860611719,  -1.4418932500060264,   0.2790267412906844,   2.0000000000000000,   1.1861801000589787,   0.0000000000000000,   0.0000000000000000,  -1.1861536899157175,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9999999637821293,  -0.5000002210199235,  -1.4999999048190218,   0.4999999691933703; 
            //   0.2097175889792746,  -1.4999998181362231,  -0.5000012978279821,  -0.4999986377124578; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.5896149014509144,  -1.1142632611809606,  -0.8778832197867762,  -0.4580742329409885,  -1.0725207676951423,   0.9775052817828114,   0.4168018519434220,   0.0561817031881477,   0.0582347939489185,   0.3625733318028464,   0.3809214416815215,   0.7478359498644640,   0.5334222320657162,   0.4811029323789321,   0.8740445263144815; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.7645980174588286,   0.2999997321320763,   0.2999982977461296,   0.3000012490033707; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.6043579362748713,   1.3583859824045650,  -0.1241872019644276,   0.6241775719658443,  -1.2087158727667058,  -0.3842962373934566,   0.4400848343350967,   0.6581624770166100,   1.0000000000000000,   0.0000000000000000,   0.3418164241540748,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.3015323547930151,  -1.4999998880280936,  -1.4999999133257940,   0.4999999236150901; 
            //   0.9999994091185700,  -1.0772673265494299,  -0.5000007058408137,  -0.4999995519527924; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.6400232650824511,  -1.1001859764089246,  -0.8836488998135901,  -0.4493239835481717,  -1.1174959558669928,   0.9890762132511787,   0.3931522074363582,  -0.0174552988498339,   0.0275040648793494,   0.2922296694574161,   0.3357905227993550,   0.7802806181741164,   0.5907074907078904,   0.5359673617338143,   0.8537580737329453; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.0130103493074242,   0.2999988148206957,  -0.6999959570414298,   1.2999981795943720; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.8283499785741437,   0.8912431690051559,  -0.2287179155064656,   0.9439912742828490,  -1.6566999574456478,  -0.8218287029947468,   0.0130403536084410,   0.7850891046493279,   0.4305477815264135,   0.0000000000000000,   0.6454548721339464,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -0.0000000012482860,  -1.4999999579363033,  -0.4999999924588003,   0.4999999978159085; 
            //   0.2320038099867647,  -0.5000007050256905,  -1.4999984418112846,   0.4999993600898291; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.6133874382462978,  -1.1013446180697601,  -0.8885525101146927,  -0.4904604660218911,  -1.1012187330682157,   0.8859114751743239,   0.3300372245783937,  -0.0227322106335211,   0.0730375854193517,   0.3575936428078668,   0.2602305210553831,   0.8379971593585146,   0.6463860170782110,   0.5418423530659537,   0.8641953234539486; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //  -0.0405600837603921,   0.2999987697762639,  -0.6999970301501851,   1.2999980046605466; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.6111098832852996,  -0.5456699140518995,   0.8339352743443746,   0.4375471965070480,  -1.2222197667899672,  -0.2087340995792926,   0.1381492234754911,   0.5845353823849991,  -0.7456860732062741,   2.0000000000000000,  -0.0415709287940206,   0.6219522110142086,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0000004279978582,  -0.5000000735991006,  -1.4999999247976958,   0.4999994017315018; 
            //   0.9999996112684240,  -1.4999986204483580,  -1.2684986516212027,   0.4999992888404329; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.7101483540599025,  -1.0504588999598456,  -1.1279953272455923,  -0.3642841182835113,  -1.2659733978980623,   0.5393188284714273,   0.2554247575577973,   0.0312367315695045,   0.2554313991886107,   0.1190964342773189,   0.8077490330054188,   0.7965809075249198,   0.8824346907013476,   0.4144289705587354,   1.0017548393665205; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.7999983878799809,   0.2999993390248004,  -0.0414452129943211,   0.3804930256494674; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.3374792831255182,   0.1647222417501040,   0.0608276859037512,   0.3273061905328554,  -0.6749585663721825,   0.0370893095966192,  -0.1144375410313830,   0.0371010065932408,  -0.0598926462414826,   0.5907733703462985,   0.1483936051057580,  -0.6182122057894925,   1.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.9999999555971650,  -1.4999999527757240,  -0.4999999959219146,  -0.4999999483155956; 
            //   0.2801445520310709,  -0.5000001021381155,  -1.4999999071529273,  -0.4999998687121532; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.5980291701431433,  -1.0689557367506433,  -0.8783552883843839,  -0.8236803989741810,  -1.0688285044267802,   0.3155463266647844,   0.2732605641961988,  -0.0077884026875626,   0.2732722940240545,   0.1009102582711794,   1.0778188962291098,   0.8679399402421618,   0.6913408059265683,   0.8163017050597950,   0.8233687089964019; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.7999991727772213,   0.2999992706066374,   0.2999515796951383,   0.3000010192264000; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.2785050366567983,   0.2164646566878086,  -0.3968563998893807,  -0.8541228925914917,  -0.5570100734135476,  -0.0314977008857853,  -0.0822743184076887,  -0.0315016166007175,  -0.0681537212865306,  -0.3444535575874695,  -0.1260028278528059,  -0.6656316750793853,   0.0366517167736016,   2.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.7076127754671691,  -0.5000000062817861,  -1.1711196419610446,  -0.4999999539408145; 
            //   0.0000010451407336,  -1.4999991274911411,  -1.4999981546668033,  -0.0446731279554520; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.5842599476285636,  -1.0735226164260154,  -0.8907373724206274,  -0.8222113250442589,  -1.0404758279120532,   0.3235380329663533,   0.2737124777013012,  -0.0066079712730172,   0.2737242637099045,   0.1018880943101969,   1.0827609462891639,   0.8697477667814416,   0.7008909614913561,   0.8157758442721923,   0.7946736936528414; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   0.7999991672786815,   0.2999992854341835,   0.2999000822763112,   0.3000009518106381; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.3754975265674236,   0.2918508912846051,  -0.5350660740277731,  -1.1515807304696657,  -0.7509950532696080,  -0.0424671270478595,  -0.1109272687954223,  -0.0424724064542543,  -0.0918890160000750,  -0.4644133565556691,  -0.1698847201012524,  -0.8974453410163781,   0.0494160865388492,   2.6965223399542890; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.1318815771346306,  -0.2523204318493701,  -0.0898899073535817,  -0.0788501986358934,  -0.2173984838228107,   0.1490614295573782,   0.1135481523167332,   0.2377276380322567,   0.1135380674911027,   0.0352199192007174,  -0.1571353417922162,   0.2290242839619474,   0.1131888339148417,   0.0439470667823798,   0.1817192524755498; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.0499975306804581,   0.0500010885834937,  -0.2914443587717447,   0.1304950437102807; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000, -18.8487132288524855,  -1.4214888132646635,  14.3203274694647593,  -3.1068837570004177,   0.0015652343621390,   9.4250189795644257,  68.3199208231343107,   9.4236960462991330,   2.8421039669387853, -99.8022000432203384,  37.6960979629364275,   9.4258929980286315, -22.0590898539996303,  49.5898460061492798; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.1246046383928614,  -0.1715201667811851,  -0.2821115003082702,   0.0038438421046786,  -0.2021674594266973,   0.0738039936216057,   0.1676821392006647,   0.3446650241594935,  -0.0311205531066929,   0.0299526377414844,   0.1056602702572522,   0.2467701248249376,   0.1697269507072300,   0.0353246768260170,   0.0039854756253604; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1749958953568966,   0.1749983128458614,  -0.1664461414681792,   0.0054957603828088; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  18.0118110639844957,  -0.0998092505816596,   6.2460320874670190,   7.1942092454174231,  97.9975819774660835,  -9.1964861980138028, -50.4559601016070758,  37.3992947528591841,  -1.6005619127775348,  -6.3853749089397871,   9.8105963004837555, -11.2885632858499658,   7.5513991815014565,   8.1741554186615559; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0003015134874543,  -0.0001650302671896,  -0.0005233770008078,  -0.0016837462602781,  -0.0005653512379101,   0.0002391880527320,   0.0002657355874882,   0.0001847035608505,   0.0028692749928669,   0.0002923766377568,   0.0036540666240680,   0.0005875674050089,  -0.0002847834157022,   0.0001782994944443,  -0.0006817966518679; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2366908973151907,   0.2355584696269479,  -0.2285796276613020,  -0.0526903941925824; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.5202833587664306,   0.2439996371534382,  -0.0814525343229632,  -0.3056893312299840,  -1.0921864621260475,   1.0000000000000000,   0.0000000000000000,  -0.0375177769418679,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.1874977673722615,   0.0624981512237545,   0.1874936963032768,  -0.0625005917877534; 
            //   0.0624984142673328,   0.1874971589979139,   0.0624984559854186,  -0.1874992178903861; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0001009356525382,   0.0004552641027108,  -0.0007437864091698,  -0.0018240544665227,  -0.0006941181988158,  -0.0006974327412418,   0.0008357435612573,   0.0002570350913733,   0.0027625283400874,   0.0005737554810624,   0.0039569832246261,   0.0004991383993901,  -0.0004934682166028,   0.0004063322238392,  -0.0003041038213695; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2370575401848092,   0.1150130021311462,  -0.2284369904761169,   0.0663936495137813; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0285731671332199,   0.2123440607026213,  -0.0799174916633635,   0.1774247744144785,   1.0063242610402428,   0.8795066190963361,   0.0000000000000000,  -0.2512264707835645,   0.0000000000000000,   0.0000000000000000,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.1874981014762322,   0.1874970121907524,   0.0624988471238290,  -0.0624995025623923; 
            //   0.1501141697783296,   0.0624972707351615,   0.1874980812729671,  -0.1874992344671167; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0000281138391220,  -0.0000992377283117,  -0.0005162155121575,  -0.0015095629307223,  -0.0002790051974963,   0.0001247543585833,   0.0010454440364938,   0.0003798529193208,   0.0022032951852884,   0.0006680121410699,   0.0050655955022932,   0.0005541641835172,  -0.0007167348007596,   0.0004944090944042,  -0.0006344517983910; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2363793996067385,   0.1130604350619235,  -0.2257073974489035,  -0.0554189067843336; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0584772039250905,  -0.2066263108195077,  -0.0083112627078322,  -0.0601072971122248,  -0.1194015393761145,  -0.2786292236225891,   2.0000000000000000,  -0.0030040829154742,   0.0000000000000000,   0.0000000000000000,  -0.1121649237693838,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.1874302997273628,   0.1874944690001176,   0.0625342659658096,  -0.1874953391744375; 
            //   0.0624989742173262,   0.1120202312899601,   0.1874963347495586,  -0.0624995217261745; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000834522803451,   0.0000016438223697,  -0.0003505602928511,  -0.0015800754698364,  -0.0001614161249078,   0.0001135222031573,   0.0008547256126740,   0.0004680930009660,   0.0022161597548739,   0.0006974928778700,   0.0051808458599478,   0.0004252263604201,  -0.0006507477999694,   0.0006896943046391,  -0.0004357245177057; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2360662252583243,   0.1131196397285830,  -0.2217309337824945,  -0.0545868255098840; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0813539534726438,   0.1617691559259527,  -0.1940748282896772,   0.0621081342090660,   0.1570983827393659,  -0.1377925877000475,  -2.5097018765036325,   0.0869280153182579,   1.0000000000000000,   0.0000000000000000,  -0.3316439527593047,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0625005900787882,   0.1874947661489159,   0.1872198532154377,  -0.1874915506258933; 
            //   0.1874964386493133,   0.0790736742757241,   0.0625014592977804,  -0.1833203456846834; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0001106698600153,   0.0000507808246942,  -0.0012934824437913,  -0.0018106561422256,   0.0010333310087671,   0.0000595414309756,   0.0017291928887085,  -0.0015401269188030,   0.0023525652678681,   0.0003552529352408,   0.0052364903289339,  -0.0006084359470533,   0.0005833001798043,   0.0015661606982243,  -0.0019245931217336; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2340782026779105,   0.1132035042866533,  -0.1984107933407103,  -0.0542544230480508; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.1032894621444767,  -0.1996809583837277,   0.0800674154496776,  -0.2116149446205304,   0.2027670979716945,   0.6230529301038067,   1.7527666143009699,  -0.0337860443516344,  -0.3481712912072707,   0.0000000000000000,   0.1285658273309911,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0624985595267466,   0.0624972769085413,   0.1874979325754724,  -0.1874991699075389; 
            //   0.1874783781542332,   0.0953600590045537,   0.0625061118793194,  -0.0625027557794029; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0002435614775102,  -0.0002888847197412,  -0.0022708625123971,  -0.0013656851459868,   0.0002223910427132,   0.0002154147657554,   0.0022584852045095,  -0.0009800948482444,   0.0021657129053160,  -0.0003824828102261,   0.0057826153466404,  -0.0002245325797916,   0.0016494619520935,   0.0012304166588061,  -0.0008758840861046; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2360009426786747,   0.1131571274153328,  -0.2227417534597362,   0.0660319794081618; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0830360777647505,   0.8337564755190118,   0.3465071387559530,   0.5964984591158099,  -2.5688371720438328,  -1.3469914636470475,  -2.0716036432206684,  -0.5801783554592940,  -5.2677301191016674,   2.0000000000000000,  -0.5332463591630094,  -2.6474105209843573,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.1874978806955222,   0.1874961737167713,   0.1874973638728680,  -0.1851998034830323; 
            //   0.0624984127354362,   0.1874971431968976,   0.0624982462771522,  -0.0624995228977875; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0005847309815103,  -0.0006077918522089,  -0.0024187085725868,  -0.0012498979032991,  -0.0002798979947358,   0.0002813738891377,   0.0022620732698110,  -0.0015603774927749,   0.0022065974670600,  -0.0021724919415257,   0.0055408087820922,   0.0006216849706190,   0.0006207454900497,   0.0025490598244026,  -0.0006228825842673; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2366522496571266,   0.1131648394414669,  -0.1967975023600717,  -0.0527351378219990; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.1584239116284726,  -0.2217418524746463,   0.1022780848800310,  -0.2809498751672876,   1.0958518357822680,   0.6011427458326386,   0.7432270522576666,   0.2849664938877504,   0.8678837652496117,  -1.0658752725302418,   0.7827538199619922,   0.3823390887065508,   1.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0625005707716561,   0.0624998021998352,   0.0625032305258436,  -0.1874965366518144; 
            //   0.1874527034705666,   0.0625112861835042,   0.1874959624533262,  -0.1874941005670331; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0001293485371913,   0.0001935027948472,  -0.0022129821211483,  -0.0008882370910515,   0.0003184097030110,  -0.0003831552481751,   0.0019913760262876,  -0.0014197599792050,   0.0020711387792437,  -0.0027521527789809,   0.0060337230585815,   0.0000901054492743,   0.0004336209632716,   0.0020866671273144,  -0.0009680953360292; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2366761721528070,   0.1131293862192943,  -0.2051529782860335,  -0.0532174741671426; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.2163696560640246,   0.3671338056025978,  -0.2860285858480430,   0.3031943544775018,  -0.0558475719377320,  -0.5742903549395075,  -3.4636686594760455,  -0.2308888656816806,   0.2649853621788056,   0.9432612507506699,   0.2898435593380908,  -0.2786150671704133,  -0.8852973870896776,   2.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0625001912196708,   0.1874969056412319,   0.1874939112015838,  -0.0625029314751764; 
            //   0.1874973972762489,   0.0947719850384828,   0.0624992266243384,  -0.1874984768130342; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0003436812672564,   0.0005877664396087,   0.0002821275586139,  -0.0002260239614614,  -0.0006864833873706,  -0.0004940189730516,   0.0008513449434908,  -0.0082955326582179,   0.0016127983573929,  -0.0022261269685690,   0.0079062029562612,   0.0006654775828159,  -0.0001194613477545,   0.0003292520321105,   0.0030021300838903; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.2358874833221962,   0.1129826370556295,  -0.1902305886528047,  -0.0180672596166930; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   3.4645588393113469, -13.7946817794860745,   5.5636407607068517,  -4.7133951306344901, -49.8598388641073385, -30.3995199594121388, 193.3014473205025183,  -1.9791588913644904, -61.7154535409009242,  12.3863567207845264, -47.4348206480018533, -16.4720062494657284,  16.6992326634521184, -61.2057556874461284; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0001568122142223,   0.0002619873624314,  -0.0001982336964144,   0.0000437677758981,  -0.0004715163503217,  -0.0001923169285406,  -0.0000454373791640,   0.0013348518995735,   0.0000345179168162,  -0.0005289588836273,   0.0002858325513358,   0.0003192454257322,   0.0004320425238379,  -0.0001397905343107,   0.0013730489092905; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1541653646998680,   0.1534352291543739,  -0.1434811311963350,   0.0099139622505367; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000, -71.5142513038626078,  -3.4941964344932743, -71.8772455582704310,   3.1319630957501592, 963.5613136571620316, -1116.7162655064275896, -979.3391537493112082, 1127.2032933749799213, -1093.4554388366977946, 2846.2789906398111270, -1166.2891081131983810, -34.0636208411787322, -1183.7860840085832024, -496.4011547656982088; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0298439021179065,   0.0505361734562051,   0.0003499960130303,  -0.0039172856597842,   0.0076074174632375,  -0.0411821915757328,  -0.0074881352731683,   0.0409441424653272,   0.0075762707754287,  -0.0080319924761763,   0.0245125877590678,  -0.0075617337895562,   0.0000544634532410,  -0.0079882677850537,  -0.0056899640390510; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1902694906450193,   0.1788793945376689,  -0.1524416021227715,   0.0197479548298063; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000, -46.3353950611742604,  -2.5393612114334561, -46.7852274425205366,   2.0898850239991607, 3070.6363140768507947, -734.1261062753252418, -3015.4455496291075178, 739.5212366596866786, -707.7637370141530937, 1600.9082575289094166, -761.1691992017882740, -14.6542562801921239, -780.3369310472089637, -133.3286121149763233; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000557738430597,   0.0003726960651926,  -0.0011189596163309,   0.0009457367592485,  -0.0003892051651084,  -0.0004913325742524,   0.0006459524162547,   0.0016076457336613,  -0.0006568767209550,  -0.0006062113597124,   0.0004833103879694,   0.0002399351835876,   0.0004234177319624,  -0.0002148871702836,   0.0013638563890204; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1711146434458481,   0.1714347261907948,  -0.1642621336297547,   0.0039785375032386; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0151586566589586,  -0.0263724481000164,   0.0042814241085051,   0.0002020654872047,   0.0009222433671265,   0.0226025281521786,  -0.0007299868671893,  -0.0211612842119765,   0.0006661512991076,  -0.0017612621259740,   0.0045915177694320,  -0.0010761262454433,   0.0004684426523316,  -0.0016736026165159,  -0.0004333740241255; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1759134144516361,   0.1640391001131669,  -0.1585704472011627,   0.0048467947955410; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000038003665423,   0.0000039091936776,   0.0000211104291300,   0.0000264305251612,  -0.0000095658654507,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1672100678487791,   0.1675284763010534,  -0.1681683311704892,   0.0078847874576965; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0037878810808986,  -0.0005705631574211,  -0.0042576523872641,  -0.0244073118808904,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000463964107568,   0.0000421497435116,   0.0000967358047690,  -0.0001827810900437,  -0.0000667393970737,  -0.0000121193270779,  -0.0000511059507202,  -0.0000828188585120,   0.0001327446665409,   0.0001177998108495,  -0.0000733355269553,   0.0000695218336198,   0.0000360181826922,   0.0000131576150611,   0.0000411059371547; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1711546266222073,   0.1713695374978349,  -0.1643498030669941,   0.0036418600247633; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.0033266972770993,   0.0139625403002935,   0.0349926737123298,   0.0577581352255226,  -8.2160597509011861,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0019343016176014,  -0.0019281247794868,  -0.0019417274612001,  -0.0019462118461859; 
            //  -0.0001665135075807,   0.0019243463149785,   0.0019417274899329,   0.0019462118458460; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.9968066830640977,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0002441406221588,   0.0002441406215917,   0.0000000000000002,   0.0000000000000002; 
            //  -0.0002441406221588,  -0.0002441406215917,   0.0000000000000002,   0.0000000000000002; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.5027221904892188,  -0.5027221916574639,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0002441406172599,  -0.0002441406172599,   0.0002441406147318,   0.0000000000000002; 
            //  -0.0002441406172599,   0.0002441406172599,  -0.0002441406147318,   0.0000000000000002; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.2512576366131905,  -0.2512576371970710,  -0.5025152790145908,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0002441406249520,  -0.0002441406249520,  -0.0002441406249528,   0.0002441406249533; 
            //  -0.0002441406249520,   0.0002441406249520,   0.0002441406249528,  -0.0002441406249533; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<   0.0000002721060135,  -0.0000002214049878,   0.0000002823826354,   0.0000004041610365,   0.0000056247349887,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1730489951131267,   0.1695065375773404,  -0.1662039524535056,   0.0020310542393696; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0000271772545075,  -0.0002713178772953,  -0.0005426357546810,  -0.0010852715114314,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,  -0.2499999984169525,   0.2499999989964871,   0.5000000025904417,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0002158875480267,  -0.0002158875480265,   0.0002723936877506,   0.0000282531386529; 
            //   0.0002723936864932,  -0.0002723936864933,   0.0002158875417130,  -0.0000282531386526; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   1.0000000000018512,   1.0000000000000000,  -0.0000000000020785,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //   0.0000282532077614,   0.0000282532077614,  -0.0000000000001658,   0.0000000000000000; 
            //  -0.0000282532077614,  -0.0000282532077614,   0.0000000000001658,  -0.0000000000000000; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.2500005947546206,  -0.2500005976889783,  -0.5000011976220025,   1.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            //  -0.0000282530692320,   0.0000282530692327,   0.0000282530730187,  -0.0000282531386525; 
            //   0.0000282530692320,  -0.0000282530692327,  -0.0000282530730187,   0.0000282531386525; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000000211323201,  -0.0000000000660637,   0.0000000607357883,  -0.0000000388247393,   0.0000044150861542,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1732930856881525,   0.1692624539513550,  -0.1659597161021006,   0.0020318282584678; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0000539718219546,  -0.0000822250290826,   0.0001079437673406,   0.0000000000000006,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT SOLVE TR SUBPROBLEM 

            // Polynomial [-polynomial_max] (input data):
            prob8.obp.col(0) <<  -0.0000000211323201,  -0.0000000000660637,   0.0000000607357883,  -0.0000000388247393,   0.0000044150861542,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_obp.push_back(prob8.obp);
            // Trial point found (output data):
            //   1.1732648326151887,   0.1692907104515440,  -0.1659314652222860,   0.0020038245175851; 

            // ------------------------------------------------------------------------------------------
            // C++ POINT NEW FUNCTION 

            // Polynomial [-polynomial_max] (input data):
            prob8.pnp.col(0) <<   0.0000000000000000,   0.0000539718219548,  -0.0000822250290824,   0.0001079437673406,   0.0000000000000007,   2.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000,   0.0000000000000000; 
            v_pnp.push_back(prob8.pnp);

            // New points (output data) - > new_points = [new_point_max, new_point_min];:
            // ; 


        }

    };

}

#endif //FIELDOPT_TEST_TR_DFO_DATA_H
