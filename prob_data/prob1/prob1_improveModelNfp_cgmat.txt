[ improveModelNfp() ]
shift_center   [   -1.2000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted [    1.3147236864e+00,     4.0579193708e-01 ] 
tr_center_pt   [    1.3147236864e+00,     4.0579193708e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

2 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_shifted [    3.3147232864e+00,     2.4057899757e+00 ] 
nfp_new_point_abs     [    2.1147232864e+00,     4.4057899757e+00 ] 
nfp_new_pivots        [   -8.0393400449e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -1.2000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted [    1.3147236864e+00,     4.0579193708e-01 ] 
tr_center_pt   [    1.3147236864e+00,     4.0579193708e-01 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_abs#0  [    2.1147232864e+00,     4.4057899757e+00 ] 
nfp_new_fvalues#0    [    1.2426080052e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted_#3:             [    1.3147236864e+00,     4.0579193708e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [    3.3147232864e+00,     2.4057899757e+00 ] 
points_abs_.cols():            3
points_abs_.rows():            2
points_abs_#1:                 [   -1.2000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -8.8527631361e-01,     2.4057919371e+00 ] 
points_abs_#3:                 [    1.1472368639e-01,     2.4057919371e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    4.8400000000e+00 ] 
fvalues_#2:                    [    3.5542667786e+00 ] 
fvalues_#3:                    [    7.8371415143e-01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted_#3:             [    1.3147236864e+00,     4.0579193708e-01 ] 
points_shifted_#4:             [    3.3147232864e+00,     2.4057899757e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [    3.3147232864e+00,     2.4057899757e+00 ] 
points_abs_.cols():            4
points_abs_.rows():            2
points_abs_#1:                 [   -1.2000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -8.8527631361e-01,     2.4057919371e+00 ] 
points_abs_#3:                 [    1.1472368639e-01,     2.4057919371e+00 ] 
points_abs_#4:                 [    2.1147232864e+00,     4.4057899757e+00 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    4.8400000000e+00 ] 
fvalues_#2:                    [    3.5542667786e+00 ] 
fvalues_#3:                    [    7.8371415143e-01 ] 
fvalues_#4:                    [    1.2426080052e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [   -1.2000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted [    1.3147236864e+00,     4.0579193708e-01 ] 
points_shifted [    3.3147232864e+00,     2.4057899757e+00 ] 
points_shifted [    2.3159521053e+00,    -1.0724232840e+00 ] 
tr_center_pt   [    2.3159521053e+00,    -1.0724232840e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

2 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_shifted [   -3.6326339030e-02,    -4.0288536833e+00 ] 
nfp_new_point_abs     [   -1.2363263390e+00,    -2.0288536833e+00 ] 
nfp_new_pivots        [   -2.1464976526e+01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [   -1.2000000000e+00,     2.0000000000e+00 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted [    1.3147236864e+00,     4.0579193708e-01 ] 
points_shifted [    3.3147232864e+00,     2.4057899757e+00 ] 
points_shifted [    2.3159521053e+00,    -1.0724232840e+00 ] 
tr_center_pt   [    2.3159521053e+00,    -1.0724232840e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_abs#0  [   -1.2363263390e+00,    -2.0288536833e+00 ] 
nfp_new_fvalues#0    [    5.0011554946e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(6)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        6
next_position:                 6
points_shifted_.cols():        5
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted_#3:             [    1.3147236864e+00,     4.0579193708e-01 ] 
points_shifted_#4:             [    3.3147232864e+00,     2.4057899757e+00 ] 
points_shifted_#5:             [    2.3159521053e+00,    -1.0724232840e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -3.6326339030e-02,    -4.0288536833e+00 ] 
points_abs_.cols():            5
points_abs_.rows():            2
points_abs_#1:                 [   -1.2000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -8.8527631361e-01,     2.4057919371e+00 ] 
points_abs_#3:                 [    1.1472368639e-01,     2.4057919371e+00 ] 
points_abs_#4:                 [    2.1147232864e+00,     4.4057899757e+00 ] 
points_abs_#5:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    4.8400000000e+00 ] 
fvalues_#2:                    [    3.5542667786e+00 ] 
fvalues_#3:                    [    7.8371415143e-01 ] 
fvalues_#4:                    [    1.2426080052e+00 ] 
fvalues_#5:                    [    1.3444890729e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        6
next_position:                 6
points_shifted_.cols():        6
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    3.1472368639e-01,     4.0579193708e-01 ] 
points_shifted_#3:             [    1.3147236864e+00,     4.0579193708e-01 ] 
points_shifted_#4:             [    3.3147232864e+00,     2.4057899757e+00 ] 
points_shifted_#5:             [    2.3159521053e+00,    -1.0724232840e+00 ] 
points_shifted_#6:             [   -3.6326339030e-02,    -4.0288536833e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -3.6326339030e-02,    -4.0288536833e+00 ] 
points_abs_.cols():            6
points_abs_.rows():            2
points_abs_#1:                 [   -1.2000000000e+00,     2.0000000000e+00 ] 
points_abs_#2:                 [   -8.8527631361e-01,     2.4057919371e+00 ] 
points_abs_#3:                 [    1.1472368639e-01,     2.4057919371e+00 ] 
points_abs_#4:                 [    2.1147232864e+00,     4.4057899757e+00 ] 
points_abs_#5:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#6:                 [   -1.2363263390e+00,    -2.0288536833e+00 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    4.8400000000e+00 ] 
fvalues_#2:                    [    3.5542667786e+00 ] 
fvalues_#3:                    [    7.8371415143e-01 ] 
fvalues_#4:                    [    1.2426080052e+00 ] 
fvalues_#5:                    [    1.3444890729e-02 ] 
fvalues_#6:                    [    5.0011554946e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

2 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_shifted [   -1.1613217520e+00,    -1.1610133067e+00 ] 
nfp_new_point_abs     [   -1.6132175065e-01,    -2.3343659062e-01 ] 
nfp_new_pivots        [   -1.4908331115e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 0 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 4)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_abs#0  [   -1.6132175065e-01,    -2.3343659062e-01 ] 
nfp_new_fvalues#0    [    1.3486682085e+00 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(4)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        4
next_position:                 4
points_shifted_.cols():        3
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_abs_.cols():            3
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
fvalues_.cols():               3
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        4
next_position:                 4
points_shifted_.cols():        4
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted_#4:             [   -1.1613217520e+00,    -1.1610133067e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_abs_.cols():            4
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
points_abs_#4:                 [   -1.6132175065e-01,    -2.3343659062e-01 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
fvalues_#4:                    [    1.3486682085e+00 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted [   -1.1613217520e+00,    -1.1610133067e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

2 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_shifted [   -5.8066127555e-01,     5.8066125907e-01 ] 
nfp_new_point_abs     [    4.1933872578e-01,     1.5082379751e+00 ] 
nfp_new_pivots        [   -8.4883389176e-01 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted [   -1.1613217520e+00,    -1.1610133067e+00 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 5)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_abs#0  [    4.1933872578e-01,     1.5082379751e+00 ] 
nfp_new_fvalues#0    [    3.3716751537e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(5)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        5
next_position:                 5
points_shifted_.cols():        4
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted_#4:             [   -1.1613217520e+00,    -1.1610133067e+00 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -5.8066127555e-01,     5.8066125907e-01 ] 
points_abs_.cols():            4
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
points_abs_#4:                 [   -1.6132175065e-01,    -2.3343659062e-01 ] 
fvalues_.cols():               4
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
fvalues_#4:                    [    1.3486682085e+00 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        5
next_position:                 5
points_shifted_.cols():        5
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted_#4:             [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_shifted_#5:             [   -5.8066127555e-01,     5.8066125907e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [   -5.8066127555e-01,     5.8066125907e-01 ] 
points_abs_.cols():            5
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
points_abs_#4:                 [   -1.6132175065e-01,    -2.3343659062e-01 ] 
points_abs_#5:                 [    4.1933872578e-01,     1.5082379751e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
fvalues_#4:                    [    1.3486682085e+00 ] 
fvalues_#5:                    [    3.3716751537e-01 ] 
------------------------------------------

exit_flag=1
=====================================


[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_shifted [   -5.8066127555e-01,     5.8066125907e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

2 new pts/pivot-pts found (T/F:1)
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_shifted [    5.8066105130e-01,    -5.8066126000e-01 ] 
nfp_new_point_abs     [    1.5806610526e+00,     3.4691545604e-01 ] 
nfp_new_pivots        [   -1.3204638069e+00 ] 

new_case -> impr_case
Return-for-loop[3]: issue return->iterate()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ improveModelNfp() ]
shift_center   [    1.0000000013e+00,     9.2757671605e-01 ] 
bl_shifted     [                -Inf,                 -Inf ] 
bu_shifted     [                 Inf,                  Inf ] 
points_shifted [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_shifted [   -5.8066127555e-01,     5.8066125907e-01 ] 
tr_center_pt   [    0.0000000000e+00,     0.0000000000e+00 ] 

A: (tr_center_pt.lpNorm<Inf>() > radius_fac*radius) [ 0 ]
B: (p_ini > dim+1)                                  [ 1 ]

Model is not old
Model is not complete, i.e., not yet fully linear (p_ini < dim+1)=(1)
For-loop[1]: (attempts<=3) Try smaller radius:  1/3
For-loop[2]: (poly_i <= block_end) Iter through avail. polyn. (poly_i= 6)

Using previously computed pts/pivot-vals
For-loop[3]: (found_i < nfp_new_points_shifted_.cols()) (1/2)
nfp_new_point_abs#0  [    1.5806610526e+00,     3.4691545604e-01 ] 
nfp_new_fvalues#0    [    3.3716725804e-01 ] 

c->GetState(): PEND
Setting -> setAreImprPointsComputed(false)

Break-for-loop[3]: (found_i < new_points_shifted.cols()) since f_succeeded.all()=1
End-for-loop[3]: (found_i < new_points_shifted.cols())

Break-if: (point_found)
Stop trying pivot polynomials for poly_i=(6)
End-for-loop[2]: (poly_i <= block_end)
Break-for-loop[1]: (attempts<=3)
End-for-loop[1]: (attempts<=3)
Setting -> setAreImprPointsComputed(false)
Update this polynomial in set
Swap polynomials

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        6
next_position:                 6
points_shifted_.cols():        5
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted_#4:             [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_shifted_#5:             [   -5.8066127555e-01,     5.8066125907e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [    5.8066105130e-01,    -5.8066126000e-01 ] 
points_abs_.cols():            5
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
points_abs_#4:                 [   -1.6132175065e-01,    -2.3343659062e-01 ] 
points_abs_#5:                 [    4.1933872578e-01,     1.5082379751e+00 ] 
fvalues_.cols():               5
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
fvalues_#4:                    [    1.3486682085e+00 ] 
fvalues_#5:                    [    3.3716751537e-01 ] 
------------------------------------------

Add point
Normalize polynomial value
Re-orthogonalize
Orthogonalize polynomials on present block -- (deffering subsequent ones)
Update model and recompute polynomials
Resize points_abs_
Resize fvalues_

------------------------------------------
If: (nfp_point_found_ && f_succeeded.all()
pivot_polynomials_.sz():       6
poly_i:                        6
next_position:                 6
points_shifted_.cols():        6
points_shifted_.rows():        2
points_shifted_#1:             [    0.0000000000e+00,     0.0000000000e+00 ] 
points_shifted_#2:             [    1.1595210399e-01,     3.3306690739e-15 ] 
points_shifted_#3:             [    1.6716435249e-01,     1.3239657911e+00 ] 
points_shifted_#4:             [   -1.1613217520e+00,    -1.1610133067e+00 ] 
points_shifted_#5:             [   -5.8066127555e-01,     5.8066125907e-01 ] 
points_shifted_#6:             [    5.8066105130e-01,    -5.8066126000e-01 ] 
nfp_new_point_shifted_.cols(): 1
nfp_new_point_shifted_.rows(): 2
nfp_new_point_shifted_#1       [    5.8066105130e-01,    -5.8066126000e-01 ] 
points_abs_.cols():            6
points_abs_.rows():            2
points_abs_#1:                 [    1.0000000013e+00,     9.2757671605e-01 ] 
points_abs_#2:                 [    1.1159521053e+00,     9.2757671605e-01 ] 
points_abs_#3:                 [    1.1671643538e+00,     2.2515425071e+00 ] 
points_abs_#4:                 [   -1.6132175065e-01,    -2.3343659062e-01 ] 
points_abs_#5:                 [    4.1933872578e-01,     1.5082379751e+00 ] 
points_abs_#6:                 [    1.5806610526e+00,     3.4691545604e-01 ] 
fvalues_.cols():               6
fvalues_.rows():               1
fvalues_#1:                    [    1.7657293946e-18 ] 
fvalues_#2:                    [    1.3444890729e-02 ] 
fvalues_#3:                    [    2.7943921186e-02 ] 
fvalues_#4:                    [    1.3486682085e+00 ] 
fvalues_#5:                    [    3.3716751537e-01 ] 
fvalues_#6:                    [    3.3716725804e-01 ] 
------------------------------------------

exit_flag=1
=====================================


